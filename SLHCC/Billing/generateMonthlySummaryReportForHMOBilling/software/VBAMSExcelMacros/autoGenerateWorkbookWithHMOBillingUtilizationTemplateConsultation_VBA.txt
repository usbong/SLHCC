Sub autoGenerateWorkbookWithHMOBillingUtilizationTemplateConsultation()
' Copyright 2019 Usbong Social Systems, Inc.
'
' Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You ' may obtain a copy of the License at
'
' http://www.apache.org/licenses/LICENSE-2.0
'
' Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, ' WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing ' permissions and limitations under the License.
'
' @author: Michael Syson
' @date created: 20190324
' @date updated: 20190328
'
' Given:
' 1) Workbook with the HMO Billing data
'
'Output:
' 1) Auto-generated new Workbook with HMO Billing Utilization data from ORTHO & PT TREATMENT DEPT. Workbook
' 2) Auto-updated Workbook with HMO Billing Utilization Template from Sta. Lucia Health Care Centre (SLHCC)
'
Dim myInput As Worksheet
Dim myOutput As Worksheet 'the same as myInput
Dim row As Range
Dim RowCount As Integer
Dim TableHeaderRow As Integer
Dim LastPrintableRow As Integer
Dim MaxPatientNameColumnWidth As Integer
Dim patientNameFontSize As Integer

'added by Mike, 20190325
Dim INPUT_NON_MASTER_LIST_OFFSET As Integer
Dim MS_EXCEL_OFFSET As Integer

Dim INPUT_REFERRING_DOCTOR_COLUMN As Integer
Dim INPUT_NOTES_COLUMN As Integer
Dim INPUT_DATE_COLUMN As Integer
Dim INPUT_PATIENT_NAME_COLUMN As Integer
Dim INPUT_CLASS_COLUMN As Integer
Dim INPUT_NET_PF_COLUMN As Integer
Dim INPUT_NEW_OLD_COLUMN As Integer
Dim INPUT_NEW_OLD_PATIENT_COLUMN As Integer
Dim INPUT_CHARGE_SLIP_NUMBER_COLUMN As Integer
Dim INPUT_APPROVAL_CODE_COLUMN As Integer
Dim INPUT_FEE_COLUMN As Integer
Dim INPUT_DIAGNOSIS_COLUMN As Integer

Dim INPUT_CONSULTATION_PROCEDURE_COLUMN As Integer
Dim INPUT_CONSULTATION_MEDICAL_DOCTOR_COLUMN As Integer
Dim INPUT_CONSULTATION_MEDICAL_CERTIFICATE_COLUMN As Integer

Dim INPUT_CONSULTATION_PROCEDURE_DETAILS_COLUMN As Integer
Dim INPUT_CONSULTATION_APPROVAL_CODE_COLUMN As Integer
Dim INPUT_CONSULTATION_DIAGNOSIS_COLUMN As Integer

Dim INPUT_CONSULTATION_OFFSET As Integer

Dim OUTPUT_HMO_BILLING_DEPARTMENT_PT_VALUE As Variant
Dim OUTPUT_HMO_BILLING_DEPARTMENT_ORTHO_VALUE As Variant
Dim OUTPUT_HMO_BILLING_DEPARTMENT_REHAB_VALUE As Variant

Dim OUTPUT_HMO_BILLING_PROCEDURE_PT_VALUE As Variant
Dim OUTPUT_HMO_BILLING_PROCEDURE_ORTHO_VALUE As Variant
Dim OUTPUT_HMO_BILLING_PROCEDURE_REHAB_VALUE As Variant
Dim OUTPUT_HMO_BILLING_PROCEDURE_ORTHO_PROCEDURE_VALUE As Variant
Dim OUTPUT_HMO_BILLING_PROCEDURE_REHAB_PROCEDURE_VALUE As Variant

Dim OUTPUT_HMO_BILLING_PAYEE_VALUE As Variant

Dim OUTPUT_HMO_BILLING_MEDICAL_DOCTOR_NAME_PT_VALUE As Variant
Dim OUTPUT_HMO_BILLING_UTILIZATION_SUMMARY_MEDICAL_DOCTOR_NAME_PT_VALUE As Variant

Dim OUTPUT_TOTAL_COLUMNS As Integer
Dim OUTPUT_HMO_BILLING_TOTAL_COLUMNS As Integer
Dim OUTPUT_HMO_UTILIZATION_SUMMARY_TOTAL_COLUMNS As Integer
Dim OUTPUT_HMO_UTILIZATION_DATE_COLUMN As Integer
Dim OUTPUT_HMO_UTILIZATION_PATIENT_NAME_COLUMN As Integer
Dim OUTPUT_HMO_UTILIZATION_HMO_NAME_COLUMN As Integer
Dim OUTPUT_HMO_UTILIZATION_DIAGNOSIS_COLUMN As Integer
Dim OUTPUT_HMO_UTILIZATION_MD_SIGNATURE_COLUMN As Integer
Dim OUTPUT_HMO_UTILIZATION_RECEIVED_BY_DATE_COLUMN As Integer

Dim OUTPUT_HMO_BILLING_DATE_COLUMN As Integer
Dim OUTPUT_HMO_BILLING_HMO_NAME_COLUMN As Integer
Dim OUTPUT_HMO_BILLING_NUMBER_COLUMN As Integer
Dim OUTPUT_HMO_BILLING_FORM_COLUMN As Integer
Dim OUTPUT_HMO_BILLING_CHARGE_SLIP_NUMBER_COLUMN As Integer
Dim OUTPUT_HMO_BILLING_PATIENT_NAME_COLUMN As Integer
Dim OUTPUT_HMO_BILLING_APPROVAL_CODE_COLUMN As Integer
Dim OUTPUT_HMO_BILLING_MEDICAL_DOCTOR_NAME_COLUMN As Integer
Dim OUTPUT_HMO_BILLING_PAYEE_COLUMN As Integer
Dim OUTPUT_HMO_BILLING_DIAGNOSIS_COLUMN As Integer
Dim OUTPUT_HMO_BILLING_DEPARTMENT_COLUMN As Integer
Dim OUTPUT_HMO_BILLING_PROCEDURE_COLUMN As Integer
Dim OUTPUT_HMO_BILLING_DOCTORS_COLUMN As Integer
Dim OUTPUT_HMO_BILLING_VAT_EXEMPT_COLUMN As Integer
Dim OUTPUT_HMO_BILLING_VATABLE_SALES_COLUMN As Integer
Dim OUTPUT_HMO_BILLING_VAT_COLUMN As Integer
Dim OUTPUT_HMO_BILLING_TOTAL_AMOUNT_COLUMN As Integer

'added by Mike, 20190325
'set the values of the defined terms, i.e. value-holders
INPUT_NON_MASTER_LIST_OFFSET = 1    '0
MS_EXCEL_OFFSET = 1 'added by Mike, 20190325
INPUT_REFERRING_DOCTOR_COLUMN = 15 - INPUT_NON_MASTER_LIST_OFFSET + MS_EXCEL_OFFSET
INPUT_NOTES_COLUMN = 0 'This column is not included in the INPUT_NON_MASTER_LIST_OFFSET + MS_EXCEL_OFFSET
INPUT_DATE_COLUMN = 1 - INPUT_NON_MASTER_LIST_OFFSET + MS_EXCEL_OFFSET
INPUT_PATIENT_NAME_COLUMN = 3 - INPUT_NON_MASTER_LIST_OFFSET + MS_EXCEL_OFFSET
INPUT_CLASS_COLUMN = 8 - INPUT_NON_MASTER_LIST_OFFSET + MS_EXCEL_OFFSET
INPUT_NET_PF_COLUMN = 10 - INPUT_NON_MASTER_LIST_OFFSET + MS_EXCEL_OFFSET
INPUT_NEW_OLD_COLUMN = 16 - INPUT_NON_MASTER_LIST_OFFSET + MS_EXCEL_OFFSET
INPUT_NEW_OLD_PATIENT_COLUMN = 16 - INPUT_NON_MASTER_LIST_OFFSET + MS_EXCEL_OFFSET
INPUT_CHARGE_SLIP_NUMBER_COLUMN = 11 - INPUT_NON_MASTER_LIST_OFFSET + MS_EXCEL_OFFSET
INPUT_APPROVAL_CODE_COLUMN = 12 - INPUT_NON_MASTER_LIST_OFFSET + MS_EXCEL_OFFSET
INPUT_FEE_COLUMN = 7 - INPUT_NON_MASTER_LIST_OFFSET + MS_EXCEL_OFFSET
INPUT_DIAGNOSIS_COLUMN = 6 - INPUT_NON_MASTER_LIST_OFFSET + MS_EXCEL_OFFSET

INPUT_CONSULTATION_PROCEDURE_COLUMN = 2 - INPUT_NON_MASTER_LIST_OFFSET + MS_EXCEL_OFFSET
INPUT_CONSULTATION_MEDICAL_DOCTOR_COLUMN = 16 - INPUT_NON_MASTER_LIST_OFFSET + MS_EXCEL_OFFSET

INPUT_CONSULTATION_MEDICAL_CERTIFICATE_COLUMN = 2 - INPUT_NON_MASTER_LIST_OFFSET + MS_EXCEL_OFFSET 'The value is the same as "INPUT_CONSULTATION_PROCEDURE_COLUMN".

'CONSULTATION
INPUT_CONSULTATION_PROCEDURE_DETAILS_COLUMN = 12 - INPUT_NON_MASTER_LIST_OFFSET + MS_EXCEL_OFFSET
INPUT_CONSULTATION_APPROVAL_CODE_COLUMN = 15 - INPUT_NON_MASTER_LIST_OFFSET + MS_EXCEL_OFFSET
INPUT_CONSULTATION_DIAGNOSIS_COLUMN = 7 - INPUT_NON_MASTER_LIST_OFFSET + MS_EXCEL_OFFSET
    
INPUT_CONSULTATION_CLASS_COLUMN = 9 - INPUT_NON_MASTER_LIST_OFFSET + MS_EXCEL_OFFSET
    
INPUT_CONSULTATION_OFFSET = 1

OUTPUT_HMO_BILLING_DEPARTMENT_PT_VALUE = "PT"
OUTPUT_HMO_BILLING_DEPARTMENT_ORTHO_VALUE = "ORTHO"
OUTPUT_HMO_BILLING_DEPARTMENT_REHAB_VALUE = "REHAB"

OUTPUT_HMO_BILLING_PROCEDURE_PT_VALUE = "PT TREATMENT"
OUTPUT_HMO_BILLING_PROCEDURE_ORTHO_VALUE = "ORTHO CONSULT"
OUTPUT_HMO_BILLING_PROCEDURE_REHAB_VALUE = "REHAB CONSULT"
OUTPUT_HMO_BILLING_PROCEDURE_ORTHO_PROCEDURE_VALUE = "ORTHO-PROCEDURE"
OUTPUT_HMO_BILLING_PROCEDURE_REHAB_PROCEDURE_VALUE = "REHAB-PROCEDURE"

OUTPUT_HMO_BILLING_PAYEE_VALUE = "STA. LUCIA HEALTH CARE CENTRE, INC."
    
'added by Mike, 20190325
OUTPUT_TOTAL_COLUMNS = 25 + MS_EXCEL_OFFSET
OUTPUT_HMO_BILLING_TOTAL_COLUMNS = 17 + MS_EXCEL_OFFSET
OUTPUT_HMO_UTILIZATION_SUMMARY_TOTAL_COLUMNS = 6 + MS_EXCEL_OFFSET
OUTPUT_HMO_UTILIZATION_DATE_COLUMN = 0 + MS_EXCEL_OFFSET
OUTPUT_HMO_UTILIZATION_PATIENT_NAME_COLUMN = 1 + MS_EXCEL_OFFSET
    
OUTPUT_HMO_UTILIZATION_HMO_NAME_COLUMN = 2 + MS_EXCEL_OFFSET
OUTPUT_HMO_UTILIZATION_DIAGNOSIS_COLUMN = 3 + MS_EXCEL_OFFSET
OUTPUT_HMO_UTILIZATION_MD_SIGNATURE_COLUMN = 4 + MS_EXCEL_OFFSET
OUTPUT_HMO_UTILIZATION_RECEIVED_BY_DATE_COLUMN = 5 + MS_EXCEL_OFFSET
    
'all PT Treatment transactions based on the HMO Billing Template
OUTPUT_HMO_BILLING_MEDICAL_DOCTOR_NAME_PT_VALUE = "SYSON, PEDRO"
OUTPUT_HMO_BILLING_UTILIZATION_SUMMARY_MEDICAL_DOCTOR_NAME_PT_VALUE = "PEDRO SYSON"

OUTPUT_HMO_BILLING_DATE_COLUMN = 0 + MS_EXCEL_OFFSET
OUTPUT_HMO_BILLING_HMO_NAME_COLUMN = 1 + MS_EXCEL_OFFSET
OUTPUT_HMO_BILLING_NUMBER_COLUMN = 2 + MS_EXCEL_OFFSET 'for use as table header only
OUTPUT_HMO_BILLING_FORM_COLUMN = 3 + MS_EXCEL_OFFSET 'for use as table header only
OUTPUT_HMO_BILLING_CHARGE_SLIP_NUMBER_COLUMN = 4 + MS_EXCEL_OFFSET
OUTPUT_HMO_BILLING_PATIENT_NAME_COLUMN = 5 + MS_EXCEL_OFFSET
OUTPUT_HMO_BILLING_APPROVAL_CODE_COLUMN = 6 + MS_EXCEL_OFFSET 'approval code/account number
OUTPUT_HMO_BILLING_MEDICAL_DOCTOR_NAME_COLUMN = 7 + MS_EXCEL_OFFSET
OUTPUT_HMO_BILLING_PAYEE_COLUMN = 8 + MS_EXCEL_OFFSET
OUTPUT_HMO_BILLING_DIAGNOSIS_COLUMN = 9 + MS_EXCEL_OFFSET 'for use as table header only
OUTPUT_HMO_BILLING_DEPARTMENT_COLUMN = 10 + MS_EXCEL_OFFSET
OUTPUT_HMO_BILLING_PROCEDURE_COLUMN = 11 + MS_EXCEL_OFFSET
OUTPUT_HMO_BILLING_DOCTORS_COLUMN = 12 + MS_EXCEL_OFFSET 'for use as table header only
OUTPUT_HMO_BILLING_VAT_EXEMPT_COLUMN = 13 + MS_EXCEL_OFFSET 'for use as table header only
OUTPUT_HMO_BILLING_VATABLE_SALES_COLUMN = 14 + MS_EXCEL_OFFSET 'for use as table header only
OUTPUT_HMO_BILLING_VAT_COLUMN = 15 + MS_EXCEL_OFFSET 'for use as table header only
OUTPUT_HMO_BILLING_TOTAL_AMOUNT_COLUMN = 16 + MS_EXCEL_OFFSET

'added by Mike, 20190328
TableHeaderRow = 6

'added by Mike, 20190324
Dim hmoBillingContainer As Collection
Set hmoBillingContainer = New Collection

Dim hmoBillingColumnValuesContainer As Collection
'Set hmoBillingColumnValuesContainer = New Collection

'added by Mike, 20190327
Dim medicalDoctorWorksheetContainer As Collection 'each Medical Doctor has a worksheet
Dim medicalDoctorWorksheetOutputRowCountContainer As Collection 'each Medical Doctor has an output row count

'added by Mike, 20190328
Dim hmoUtilizationTableHeaderContainer As Collection


Dim hmoBillingContainerTransactionCount As Integer

hmoBillingContainerTransactionCount = 1
RowCount = 2 'do not include table header row
RowCountOffset = 0 'This is to make the add-on software automatically adjust to rows with new line marks
OutputRowCount = 1 'added by Mike, 20190325

'added by Mike, 20190328
'Application.ScreenUpdating = False

Set myInput = Sheets(ActiveSheet.name)

'added by Mike, 20190325
Set NewWorkbook = Workbooks.Add
    With NewWorkbook
        .SaveAs Filename:="HMOBillingUtilizationConsultation.xls"
    End With

'   ImportTextFilesAsWorksheetsInWorkbookUtilizationHMOMarch2019_20190301~20190308

'Set myOutput = Sheets(ActiveSheet.name)

'added by Mike, 20190327
Set medicalDoctorWorksheetContainer = New Collection

'added by Mike, 20190328
Set hmoUtilizationTableHeaderContainer = New Collection

hmoUtilizationTableHeaderContainer.Add "DATE", CStr(1) 'convert 1 to a String to be accepted as key
hmoUtilizationTableHeaderContainer.Add "PATIENT'S NAME", CStr(2)
hmoUtilizationTableHeaderContainer.Add "HMO NAME", CStr(3)
hmoUtilizationTableHeaderContainer.Add "DIAGNOSIS", CStr(4)
hmoUtilizationTableHeaderContainer.Add "MD'S SIGNATURE", CStr(5)
hmoUtilizationTableHeaderContainer.Add "RECEIVED BY/DATE", CStr(6)

For Each row In myInput.Rows
        Set hmoBillingColumnValuesContainer = New Collection

        'MsgBox ("UCase(Trim(myInput.Cells(RowCount, INPUT_DATE_COLUMN))): " & UCase(Trim(myInput.Cells(RowCount, INPUT_DATE_COLUMN + 1))))
                
'        If InStr(myInput.Cells(RowCount, INPUT_CLASS_COLUMN).Value, "HMO") = 1 Then
         If InStr(myInput.Cells(RowCount, INPUT_CONSULTATION_CLASS_COLUMN).Value, "HMO") = 1 Then
            'TO-DO: -put: values in the containers
            hmoBillingColumnValuesContainer.Add UCase(Trim(myInput.Cells(RowCount, INPUT_DATE_COLUMN))), CStr(OUTPUT_HMO_UTILIZATION_DATE_COLUMN)
            'hmoBillingColumnValuesContainer.Add UCase(Trim(myInput.Cells(RowCount, INPUT_CLASS_COLUMN))), CStr(OUTPUT_HMO_UTILIZATION_HMO_NAME_COLUMN)
            hmoBillingColumnValuesContainer.Add UCase(Trim(myInput.Cells(RowCount, INPUT_CONSULTATION_CLASS_COLUMN))), CStr(OUTPUT_HMO_UTILIZATION_HMO_NAME_COLUMN)

'            hmoBillingColumnValuesContainer.Add UCase(Trim(myInput.Cells(RowCount, INPUT_CHARGE_SLIP_NUMBER_COLUMN))), "" & OUTPUT_HMO_BILLING_CHARGE_SLIP_NUMBER_COLUMN
            hmoBillingColumnValuesContainer.Add UCase(Trim(myInput.Cells(RowCount, INPUT_PATIENT_NAME_COLUMN))), CStr(OUTPUT_HMO_BILLING_PATIENT_NAME_COLUMN)
            'hmoBillingColumnValuesContainer.Add UCase(Trim(myInput.Cells(RowCount, INPUT_APPROVAL_CODE_COLUMN))), "" & OUTPUT_HMO_BILLING_APPROVAL_CODE_COLUMN
            hmoBillingColumnValuesContainer.Add UCase(Trim(myInput.Cells(RowCount, INPUT_CONSULTATION_APPROVAL_CODE_COLUMN))), CStr(OUTPUT_HMO_BILLING_APPROVAL_CODE_COLUMN)
            'hmoBillingColumnValuesContainer.Add getNameWithLastNameFirst(Replace(Replace(UCase(Trim(myInput.Cells(RowCount, INPUT_REFERRING_DOCTOR_COLUMN))), "DRA. ", ""), "DR. ", "")), "" & OUTPUT_HMO_BILLING_MEDICAL_DOCTOR_NAME_COLUMN
            hmoBillingColumnValuesContainer.Add getNameWithLastNameFirst(Replace(Replace(UCase(Trim(myInput.Cells(RowCount, INPUT_CONSULTATION_MEDICAL_DOCTOR_COLUMN))), "DRA. ", ""), "DR. ", "")), "" & OUTPUT_HMO_BILLING_MEDICAL_DOCTOR_NAME_COLUMN
'            hmoBillingColumnValuesContainer.Add UCase(Trim(CStr(OUTPUT_HMO_BILLING_PAYEE_VALUE))), CStr(OUTPUT_HMO_BILLING_PAYEE_COLUMN)
            
            'hmoBillingColumnValuesContainer.Add UCase(Trim(myInput.Cells(RowCount, INPUT_DIAGNOSIS_COLUMN))), "" & OUTPUT_HMO_BILLING_DIAGNOSIS_COLUMN
            hmoBillingColumnValuesContainer.Add UCase(Trim(myInput.Cells(RowCount, INPUT_CONSULTATION_DIAGNOSIS_COLUMN))), "" & OUTPUT_HMO_BILLING_DIAGNOSIS_COLUMN
            
'            hmoBillingColumnValuesContainer.Add UCase(Trim("" & OUTPUT_HMO_BILLING_DEPARTMENT_PT_VALUE)), "" & OUTPUT_HMO_BILLING_DEPARTMENT_COLUMN
'            hmoBillingColumnValuesContainer.Add UCase(Trim("" & OUTPUT_HMO_BILLING_PROCEDURE_PT_VALUE)), "" & OUTPUT_HMO_BILLING_PROCEDURE_COLUMN
'            hmoBillingColumnValuesContainer.Add UCase(Trim(myInput.Cells(RowCount, INPUT_FEE_COLUMN))), "" & OUTPUT_HMO_BILLING_TOTAL_AMOUNT_COLUMN
            
            hmoBillingContainer.Add hmoBillingColumnValuesContainer, CStr(hmoBillingContainerTransactionCount)
            hmoBillingContainerTransactionCount = hmoBillingContainerTransactionCount + 1
        End If
                            
        If IsEmpty(myInput.Range("C" & RowCount).Value) Then
            Exit For
        Else
            RowCount = RowCount + 1
        End If
Next row

'added by Mike, 20190328
Set medicalDoctorWorksheetOutputRowCountContainer = New Collection

'added by Mike, 20190327; edited by Mike, 20190328
For Each hmoBillingColumnValuesContainer In hmoBillingContainer
    'added by Mike, 20190327
    medicalDoctorName = hmoBillingColumnValuesContainer(CStr(OUTPUT_HMO_BILLING_MEDICAL_DOCTOR_NAME_COLUMN))

    'If a workheet with the Medical Doctor's name exists
    If Evaluate("ISREF('" & medicalDoctorName & "'!A1)") Then
         Set myOutput = Sheets(medicalDoctorName)

'        myOutput.Cells(OutputRowCount, OUTPUT_HMO_UTILIZATION_DATE_COLUMN).Value = "" & hmoBillingColumnValuesContainer("" & OUTPUT_HMO_UTILIZATION_DATE_COLUMN)
'        myOutput.Cells(OutputRowCount, OUTPUT_HMO_UTILIZATION_HMO_NAME_COLUMN).Value = "" & Replace(hmoBillingColumnValuesContainer("" & OUTPUT_HMO_UTILIZATION_HMO_NAME_COLUMN), "HMO/", "")
         OutputRowCount = medicalDoctorWorksheetOutputRowCountContainer(medicalDoctorName)
         
         myOutput.Cells(OutputRowCount, OUTPUT_HMO_UTILIZATION_DATE_COLUMN).Value = hmoBillingColumnValuesContainer(CStr(OUTPUT_HMO_UTILIZATION_DATE_COLUMN))
         myOutput.Cells(OutputRowCount, OUTPUT_HMO_UTILIZATION_PATIENT_NAME_COLUMN).Value = hmoBillingColumnValuesContainer(CStr(OUTPUT_HMO_BILLING_PATIENT_NAME_COLUMN))
         myOutput.Cells(OutputRowCount, OUTPUT_HMO_UTILIZATION_HMO_NAME_COLUMN).Value = Replace(hmoBillingColumnValuesContainer(CStr(OUTPUT_HMO_UTILIZATION_HMO_NAME_COLUMN)), "HMO/", "")
         myOutput.Cells(OutputRowCount, OUTPUT_HMO_UTILIZATION_DIAGNOSIS_COLUMN).Value = hmoBillingColumnValuesContainer(CStr(OUTPUT_HMO_BILLING_DIAGNOSIS_COLUMN))
                        
         medicalDoctorWorksheetOutputRowCountContainer.Remove medicalDoctorName
         medicalDoctorWorksheetOutputRowCountContainer.Add OutputRowCount + 1, medicalDoctorName
    
    'If a workheet with the Medical Doctor's name does not exist
    Else
        NewWorkbook.Sheets.Add.name = medicalDoctorName
        
        medicalDoctorWorksheetOutputRowCountContainer.Add TableHeaderRow + 1, medicalDoctorName
            
        Set myOutput = Sheets(ActiveSheet.name)
    
        'added by Mike, 20190327
        'add the portion above the table header row
        myOutput.Cells(1, OUTPUT_HMO_UTILIZATION_MD_SIGNATURE_COLUMN).Value = "PHYSICIAN:"
        myOutput.Cells(1, OUTPUT_HMO_UTILIZATION_MD_SIGNATURE_COLUMN + 1).Value = medicalDoctorName
        
        'added by Mike, 20190328
        myOutput.Cells(2, OUTPUT_HMO_UTILIZATION_MD_SIGNATURE_COLUMN).Value = "PERIOD COVERED:"
        
        myOutput.Cells(3, OUTPUT_HMO_UTILIZATION_DIAGNOSIS_COLUMN).Value = "CONSULTATION"
        myOutput.Cells(4, OUTPUT_HMO_UTILIZATION_DIAGNOSIS_COLUMN).Value = "STA. LUCIA HEALTH CARE CENTRE, INC."
        myOutput.Cells(5, OUTPUT_HMO_UTILIZATION_DIAGNOSIS_COLUMN).Value = "HMO UTILIZATION SUMMARY"
        
        'added by Mike, 20190328
        For i = 1 To hmoUtilizationTableHeaderContainer.Count 'from 1 to the total items in the container
            myOutput.Cells(6, i).Value = hmoUtilizationTableHeaderContainer(i)
        Next
        
'        myOutput.Cells(OutputRowCount, OUTPUT_HMO_UTILIZATION_HMO_NAME_COLUMN).Value = "" & Replace(hmoBillingColumnValuesContainer("" & OUTPUT_HMO_UTILIZATION_HMO_NAME_COLUMN), "HMO/", "")
            
            
            'write Medical Doctor name as the worksheet name
'            MsgBox ("medicalDoctorName: " & medicalDoctorName)
'            medicalDoctorWorksheetContainer(medicalDoctorName).Name = medicalDoctorName
            

    End If

'    myOutput.Cells(OutputRowCount, OUTPUT_HMO_UTILIZATION_DATE_COLUMN).Value = "" & hmoBillingColumnValuesContainer("" & OUTPUT_HMO_UTILIZATION_DATE_COLUMN)
'    myOutput.Cells(OutputRowCount, OUTPUT_HMO_UTILIZATION_HMO_NAME_COLUMN).Value = "" & Replace(hmoBillingColumnValuesContainer("" & OUTPUT_HMO_UTILIZATION_HMO_NAME_COLUMN), "HMO/", "")
    
    'OutputRowCount = OutputRowCount + 1
Next hmoBillingColumnValuesContainer

'added by Mike, 20190328
'delete default worksheet automatically included when we created a new workbook
Application.DisplayAlerts = False 'do not display alert/warning message for delete confirmation
Worksheets("Sheet1").Delete
Application.DisplayAlerts = True

'added by Mike, 20190328
Dim ws As Worksheet
For Each ws In NewWorkbook.Worksheets
    If ws.name <> "Template" Then
        ws.Activate
        Call autoUpdateWorkbookWithHMOBillingUtilizationTemplate
    End If
Next

'added by Mike, 20190328
'Application.ScreenUpdating = True

End Sub

'added by Mike, 20190327
'input: MICHAEL SYSON
'output: SYSON, MICHAEL
'input: MICHAEL DELA PAZ
'output: DELA PAZ, MICHAEL
Private Function getNameWithLastNameFirst(name As String) As String
nameArray = Split(name, " ")
lastName = Trim(nameArray(UBound(nameArray)))
firstName = ""

For i = LBound(nameArray) To UBound(nameArray) - 1
    firstName = firstName & " " & nameArray(i)
Next

'MsgBox ("value: " & firstName)
'MsgBox ("name: " & name)

'if the name has "DELA"
If InStr(Trim(name), "DELA") > 0 Then
'MsgBox ("name: " & name)

    lastName = "DELA " & lastName
    firstName = Replace(firstName, "DELA", "")
End If
           
'MsgBox ("lastName: " & lastName)
           
getNameWithLastNameFirst = lastName & ", " & Trim(firstName)

'MsgBox ("returnOutput: " & returnOutput)

End Function

Private Sub autoUpdateWorkbookWithHMOBillingUtilizationTemplate()
' Copyright 2019 Usbong Social Systems, Inc.
'
' Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You ' may obtain a copy of the License at
'
' http://www.apache.org/licenses/LICENSE-2.0
'
' Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, ' WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing ' permissions and limitations under the License.
'
' @author: Michael Syson
' @date created: 20190305
' @date updated: 20190312
'
' Given:
' 1) Workbook with the HMO Billing data
'
'Output:
' 1) Auto-update Workbook with HMO Billing Utilization Template from Sta. Lucia Health Care Centre (SLHCC)
'
Dim myInput As Worksheet
Dim myOutput As Worksheet 'the same as myInput
Dim row As Range
Dim RowCount As Integer
Dim TableHeaderRow As Integer
Dim LastPrintableRow As Integer
Dim MaxPatientNameColumnWidth As Integer
Dim patientNameFontSize As Integer

RowCount = 1
TableHeaderRow = 6
'edited by Mike, 20190312
LastPrintableRow = 39 'updated: 33 to 39, which is actually the last printable row on an A4 paper
'added by Mike, 20190312
RowCountOffset = 0 'This is to make the add-on software automatically adjust to rows with new line marks
MaxDiagnosisColumnWidthPixels = 506 '11pt font * 46 characters in Pixels
DiagnosisFontSize = 11
MaxColumnWidthInCharacters = 46

Set myInput = Sheets(ActiveSheet.name)
Set myOutput = Sheets(ActiveSheet.name)

'Auto-fit Date column based on actual value
myOutput.Range("A" & TableHeaderRow + 1, "A" & TableHeaderRow + 1).Select
Selection.EntireColumn.AutoFit 'edited by Mike, 20190309
'Selection.EntireColumn.ColumnWidth = 12

'Auto-fit select columns based on the table header row
myOutput.Range("B" & TableHeaderRow, "F" & TableHeaderRow).Select
Selection.EntireColumn.AutoFit

'Auto-fit DIAGNOSIS column
myOutput.Range("D" & TableHeaderRow, "D" & TableHeaderRow).Select
Selection.EntireColumn.ColumnWidth = 46


'Auto-update font size of value of DIAGNOSIS based on the following:
'max column width: 46
'max number of characters in value: 44
'default font size: 11
'font style: Calibri
For Each row In myInput.Rows
       'added by Mike, 20190309
        myOutput.Range("D" & RowCount, "D" & RowCount).Font.name = "Calibri"
        myOutput.Range("D" & RowCount, "D" & RowCount).Font.Size = DiagnosisFontSize

        If RowCount <= TableHeaderRow Then
            'MsgBox ("RowCount: " & RowCount)

            myOutput.Range("A" & RowCount, "F" & RowCount).Font.Bold = True
            RowCount = RowCount + 1
        Else
        
            diagnosisValue = myInput.Range("D" & RowCount, "D" & RowCount).Value
            diagnosisValueLength = Len(myInput.Range("D" & RowCount, "D" & RowCount).Value)
            diagnosisValueArray = Split(myInput.Range("D" & RowCount, "D" & RowCount).Value, " ")
            output = Trim(diagnosisValue)
            
            'MsgBox ("RowCount: " & RowCount)
            'MsgBox ("patientNameValueLength: " & patientNameValueLength)
    
            If diagnosisValueLength > MaxColumnWidthInCharacters Then
                output = ""
                temp = ""
                'MsgBox ("diagnosisValue: " & diagnosisValue)
               ' MsgBox ("diagnosisValueLength: " & diagnosisValueLength)
                'MsgBox ("MaxColumnWidthInCharacters: " & MaxColumnWidthInCharacters)
                    
                    For Index = LBound(diagnosisValueArray) To UBound(diagnosisValueArray)
                   ' MsgBox ("temp: " & temp)
                        Value = diagnosisValueArray(Index)
                        temp = temp & " " & Value
                        If Len(temp) > MaxColumnWidthInCharacters Then
                            output = output & vbCrLf & Value 'add new line
                            temp = Value
                            RowCountOffset = RowCountOffset + 1
                        Else
                            output = output & " " & Value
                        End If
                    Next
                    
            End If
            
            'edited by Mike, 20190309
            'remove the excess character encoding, i.e. 'Â', due to reading the file in non-UTF-8 encoding or file origin
            myInput.Range("D" & RowCount, "D" & RowCount).Value = Replace(Trim(output), "Â", "")
            
            If IsEmpty(myInput.Range("C" & RowCount).Value) Then
                Exit For
            Else
                RowCount = RowCount + 1
            End If
        End If
Next row

myOutput.Range("A" & 1, "F" & RowCount).Font.Size = 11
myOutput.Range("A" & 1, "F" & RowCount).Font.name = "Calibri"
'myOutput.Range("A" & 1, "Q" & RowCount).NumberFormat = "0.00"

'added by Mike, 20190305; edited by Mike, 20190312
If RowCount + RowCountOffset < LastPrintableRow Then
    myOutput.Range("A" & TableHeaderRow, "F" & LastPrintableRow - RowCountOffset).Borders.LineStyle = 1
Else
    myOutput.Range("A" & TableHeaderRow, "F" & RowCount - 1).Borders.LineStyle = 1
End If

'added by Mike, 20190306
myOutput.PageSetup.Orientation = xlLandscape
'added by Mike, 20190306
'Set Margins to Narrow
'The values below are already in cm or centimeters
myOutput.PageSetup.TopMargin = 1.91
myOutput.PageSetup.BottomMargin = 1.91
myOutput.PageSetup.LeftMargin = 0.64
myOutput.PageSetup.RightMargin = 0.64
myOutput.PageSetup.HeaderMargin = 0.76
myOutput.PageSetup.FooterMargin = 0.76

'added by Mike, 20190309
'add bottom border in F1 and F2
myOutput.Range("F" & 1).Borders(xlEdgeBottom).LineStyle = 1
myOutput.Range("F" & 2).Borders(xlEdgeBottom).LineStyle = 1

'added by Mike, 20190309
'align to the right the values in E1, i.e. "PHYSICIAN:", and E2, i.e. "PERIOD COVERED:"
myOutput.Range("E" & 1).HorizontalAlignment = xlRight
myOutput.Range("E" & 2).HorizontalAlignment = xlRight

'added by Mike, 20190309
'align to the center the values in D3, D4, and D5, above the table header row
myOutput.Range("D" & 3).HorizontalAlignment = xlCenter
myOutput.Range("D" & 4).HorizontalAlignment = xlCenter
myOutput.Range("D" & 5).HorizontalAlignment = xlCenter

'added by Mike, 20190309
'align to the center the values in the table header row
myOutput.Range("A" & 6, "F" & 6).HorizontalAlignment = xlCenter

'added by Mike, 20190309
'align to the center vertically all the values in the table
myOutput.Range("A" & TableHeaderRow, "F" & RowCount).VerticalAlignment = xlCenter
End Sub