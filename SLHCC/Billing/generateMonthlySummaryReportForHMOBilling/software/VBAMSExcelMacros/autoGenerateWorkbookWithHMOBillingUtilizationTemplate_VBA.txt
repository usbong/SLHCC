Sub autoGenerateWorkbookWithHMOBillingUtilizationTemplate()
' Copyright 2019 Usbong Social Systems, Inc.
'
' Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You ' may obtain a copy of the License at
'
' http://www.apache.org/licenses/LICENSE-2.0
'
' Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, ' WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing ' permissions and limitations under the License.
'
' @author: Michael Syson
' @date created: 20190324
' @date updated: 20190328
'
' Given:
' 1) Workbook with the HMO Billing data
'
'Output:
' 1) Auto-generated new Workbook with HMO Billing Utilization data from ORTHO & PT TREATMENT DEPT. Workbook
' 2) Auto-updated Workbook with HMO Billing Utilization Template from Sta. Lucia Health Care Centre (SLHCC)
'
Dim myInput As Worksheet
Dim myOutput As Worksheet 'the same as myInput
Dim row As Range
Dim RowCount As Integer
Dim TableHeaderRow As Integer
Dim LastPrintableRow As Integer
Dim MaxPatientNameColumnWidth As Integer
Dim patientNameFontSize As Integer

'added by Mike, 20190325
Dim INPUT_NON_MASTER_LIST_OFFSET As Integer
Dim MS_EXCEL_OFFSET As Integer

Dim INPUT_REFERRING_DOCTOR_COLUMN As Integer
Dim INPUT_NOTES_COLUMN As Integer
Dim INPUT_DATE_COLUMN As Integer
Dim INPUT_PATIENT_NAME_COLUMN As Integer
Dim INPUT_CLASS_COLUMN As Integer
Dim INPUT_NET_PF_COLUMN As Integer
Dim INPUT_NEW_OLD_COLUMN As Integer
Dim INPUT_NEW_OLD_PATIENT_COLUMN As Integer
Dim INPUT_CHARGE_SLIP_NUMBER_COLUMN As Integer
Dim INPUT_APPROVAL_CODE_COLUMN As Integer
Dim INPUT_FEE_COLUMN As Integer
Dim INPUT_DIAGNOSIS_COLUMN As Integer

Dim INPUT_CONSULTATION_PROCEDURE_COLUMN As Integer
Dim INPUT_CONSULTATION_MEDICAL_DOCTOR_COLUMN As Integer
Dim INPUT_CONSULTATION_MEDICAL_CERTIFICATE_COLUMN As Integer

Dim INPUT_CONSULTATION_PROCEDURE_DETAILS_COLUMN As Integer
Dim INPUT_CONSULTATION_APPROVAL_CODE_COLUMN As Integer
Dim INPUT_CONSULTATION_DIAGNOSIS_COLUMN As Integer

Dim INPUT_CONSULTATION_OFFSET As Integer

Dim OUTPUT_HMO_BILLING_DEPARTMENT_PT_VALUE As Variant
Dim OUTPUT_HMO_BILLING_DEPARTMENT_ORTHO_VALUE As Variant
Dim OUTPUT_HMO_BILLING_DEPARTMENT_REHAB_VALUE As Variant

Dim OUTPUT_HMO_BILLING_PROCEDURE_PT_VALUE As Variant
Dim OUTPUT_HMO_BILLING_PROCEDURE_ORTHO_VALUE As Variant
Dim OUTPUT_HMO_BILLING_PROCEDURE_REHAB_VALUE As Variant
Dim OUTPUT_HMO_BILLING_PROCEDURE_ORTHO_PROCEDURE_VALUE As Variant
Dim OUTPUT_HMO_BILLING_PROCEDURE_REHAB_PROCEDURE_VALUE As Variant

Dim OUTPUT_HMO_BILLING_PAYEE_VALUE As Variant

Dim OUTPUT_HMO_BILLING_MEDICAL_DOCTOR_NAME_PT_VALUE As Variant
Dim OUTPUT_HMO_BILLING_UTILIZATION_SUMMARY_MEDICAL_DOCTOR_NAME_PT_VALUE As Variant

Dim OUTPUT_TOTAL_COLUMNS As Integer
Dim OUTPUT_HMO_BILLING_TOTAL_COLUMNS As Integer
Dim OUTPUT_HMO_UTILIZATION_SUMMARY_TOTAL_COLUMNS As Integer
Dim OUTPUT_HMO_UTILIZATION_DATE_COLUMN As Integer
Dim OUTPUT_HMO_UTILIZATION_PATIENT_NAME_COLUMN As Integer
Dim OUTPUT_HMO_UTILIZATION_HMO_NAME_COLUMN As Integer
Dim OUTPUT_HMO_UTILIZATION_DIAGNOSIS_COLUMN As Integer
Dim OUTPUT_HMO_UTILIZATION_MD_SIGNATURE_COLUMN As Integer
Dim OUTPUT_HMO_UTILIZATION_RECEIVED_BY_DATE_COLUMN As Integer

Dim OUTPUT_HMO_BILLING_DATE_COLUMN As Integer
Dim OUTPUT_HMO_BILLING_HMO_NAME_COLUMN As Integer
Dim OUTPUT_HMO_BILLING_NUMBER_COLUMN As Integer
Dim OUTPUT_HMO_BILLING_FORM_COLUMN As Integer
Dim OUTPUT_HMO_BILLING_CHARGE_SLIP_NUMBER_COLUMN As Integer
Dim OUTPUT_HMO_BILLING_PATIENT_NAME_COLUMN As Integer
Dim OUTPUT_HMO_BILLING_APPROVAL_CODE_COLUMN As Integer
Dim OUTPUT_HMO_BILLING_MEDICAL_DOCTOR_NAME_COLUMN As Integer
Dim OUTPUT_HMO_BILLING_PAYEE_COLUMN As Integer
Dim OUTPUT_HMO_BILLING_DIAGNOSIS_COLUMN As Integer
Dim OUTPUT_HMO_BILLING_DEPARTMENT_COLUMN As Integer
Dim OUTPUT_HMO_BILLING_PROCEDURE_COLUMN As Integer
Dim OUTPUT_HMO_BILLING_DOCTORS_COLUMN As Integer
Dim OUTPUT_HMO_BILLING_VAT_EXEMPT_COLUMN As Integer
Dim OUTPUT_HMO_BILLING_VATABLE_SALES_COLUMN As Integer
Dim OUTPUT_HMO_BILLING_VAT_COLUMN As Integer
Dim OUTPUT_HMO_BILLING_TOTAL_AMOUNT_COLUMN As Integer

'added by Mike, 20190325
'set the values of the defined terms, i.e. value-holders
INPUT_NON_MASTER_LIST_OFFSET = 1    '0
MS_EXCEL_OFFSET = 1 'added by Mike, 20190325
INPUT_REFERRING_DOCTOR_COLUMN = 15 - INPUT_NON_MASTER_LIST_OFFSET + MS_EXCEL_OFFSET
INPUT_NOTES_COLUMN = 0 'This column is not included in the INPUT_NON_MASTER_LIST_OFFSET + MS_EXCEL_OFFSET
INPUT_DATE_COLUMN = 1 - INPUT_NON_MASTER_LIST_OFFSET + MS_EXCEL_OFFSET
INPUT_PATIENT_NAME_COLUMN = 3 - INPUT_NON_MASTER_LIST_OFFSET + MS_EXCEL_OFFSET
INPUT_CLASS_COLUMN = 8 - INPUT_NON_MASTER_LIST_OFFSET + MS_EXCEL_OFFSET
INPUT_NET_PF_COLUMN = 10 - INPUT_NON_MASTER_LIST_OFFSET + MS_EXCEL_OFFSET
INPUT_NEW_OLD_COLUMN = 16 - INPUT_NON_MASTER_LIST_OFFSET + MS_EXCEL_OFFSET
INPUT_NEW_OLD_PATIENT_COLUMN = 16 - INPUT_NON_MASTER_LIST_OFFSET + MS_EXCEL_OFFSET
INPUT_CHARGE_SLIP_NUMBER_COLUMN = 11 - INPUT_NON_MASTER_LIST_OFFSET + MS_EXCEL_OFFSET
INPUT_APPROVAL_CODE_COLUMN = 12 - INPUT_NON_MASTER_LIST_OFFSET + MS_EXCEL_OFFSET
INPUT_FEE_COLUMN = 7 - INPUT_NON_MASTER_LIST_OFFSET + MS_EXCEL_OFFSET
INPUT_DIAGNOSIS_COLUMN = 6 - INPUT_NON_MASTER_LIST_OFFSET + MS_EXCEL_OFFSET

INPUT_CONSULTATION_PROCEDURE_COLUMN = 2 - INPUT_NON_MASTER_LIST_OFFSET + MS_EXCEL_OFFSET
INPUT_CONSULTATION_MEDICAL_DOCTOR_COLUMN = 16 - INPUT_NON_MASTER_LIST_OFFSET + MS_EXCEL_OFFSET

INPUT_CONSULTATION_MEDICAL_CERTIFICATE_COLUMN = 2 - INPUT_NON_MASTER_LIST_OFFSET + MS_EXCEL_OFFSET 'The value is the same as "INPUT_CONSULTATION_PROCEDURE_COLUMN".

'CONSULTATION
INPUT_CONSULTATION_PROCEDURE_DETAILS_COLUMN = 12 - INPUT_NON_MASTER_LIST_OFFSET + MS_EXCEL_OFFSET
INPUT_CONSULTATION_APPROVAL_CODE_COLUMN = 15 - INPUT_NON_MASTER_LIST_OFFSET + MS_EXCEL_OFFSET
INPUT_CONSULTATION_DIAGNOSIS_COLUMN = 7 - INPUT_NON_MASTER_LIST_OFFSET + MS_EXCEL_OFFSET
    
INPUT_CONSULTATION_OFFSET = 1

OUTPUT_HMO_BILLING_DEPARTMENT_PT_VALUE = "PT"
OUTPUT_HMO_BILLING_DEPARTMENT_ORTHO_VALUE = "ORTHO"
OUTPUT_HMO_BILLING_DEPARTMENT_REHAB_VALUE = "REHAB"

OUTPUT_HMO_BILLING_PROCEDURE_PT_VALUE = "PT TREATMENT"
OUTPUT_HMO_BILLING_PROCEDURE_ORTHO_VALUE = "ORTHO CONSULT"
OUTPUT_HMO_BILLING_PROCEDURE_REHAB_VALUE = "REHAB CONSULT"
OUTPUT_HMO_BILLING_PROCEDURE_ORTHO_PROCEDURE_VALUE = "ORTHO-PROCEDURE"
OUTPUT_HMO_BILLING_PROCEDURE_REHAB_PROCEDURE_VALUE = "REHAB-PROCEDURE"

OUTPUT_HMO_BILLING_PAYEE_VALUE = "STA. LUCIA HEALTH CARE CENTRE, INC."
    
'added by Mike, 20190325
OUTPUT_TOTAL_COLUMNS = 25 + MS_EXCEL_OFFSET
OUTPUT_HMO_BILLING_TOTAL_COLUMNS = 17 + MS_EXCEL_OFFSET
OUTPUT_HMO_UTILIZATION_SUMMARY_TOTAL_COLUMNS = 6 + MS_EXCEL_OFFSET
OUTPUT_HMO_UTILIZATION_DATE_COLUMN = 0 + MS_EXCEL_OFFSET
OUTPUT_HMO_UTILIZATION_PATIENT_NAME_COLUMN = 1 + MS_EXCEL_OFFSET
    
OUTPUT_HMO_UTILIZATION_HMO_NAME_COLUMN = 2 + MS_EXCEL_OFFSET
OUTPUT_HMO_UTILIZATION_DIAGNOSIS_COLUMN = 3 + MS_EXCEL_OFFSET
OUTPUT_HMO_UTILIZATION_MD_SIGNATURE_COLUMN = 4 + MS_EXCEL_OFFSET
OUTPUT_HMO_UTILIZATION_RECEIVED_BY_DATE_COLUMN = 5 + MS_EXCEL_OFFSET
    
'all PT Treatment transactions based on the HMO Billing Template
OUTPUT_HMO_BILLING_MEDICAL_DOCTOR_NAME_PT_VALUE = "SYSON, PEDRO"
OUTPUT_HMO_BILLING_UTILIZATION_SUMMARY_MEDICAL_DOCTOR_NAME_PT_VALUE = "PEDRO SYSON"

OUTPUT_HMO_BILLING_DATE_COLUMN = 0 + MS_EXCEL_OFFSET
OUTPUT_HMO_BILLING_HMO_NAME_COLUMN = 1 + MS_EXCEL_OFFSET
OUTPUT_HMO_BILLING_NUMBER_COLUMN = 2 + MS_EXCEL_OFFSET 'for use as table header only
OUTPUT_HMO_BILLING_FORM_COLUMN = 3 + MS_EXCEL_OFFSET 'for use as table header only
OUTPUT_HMO_BILLING_CHARGE_SLIP_NUMBER_COLUMN = 4 + MS_EXCEL_OFFSET
OUTPUT_HMO_BILLING_PATIENT_NAME_COLUMN = 5 + MS_EXCEL_OFFSET
OUTPUT_HMO_BILLING_APPROVAL_CODE_COLUMN = 6 + MS_EXCEL_OFFSET 'approval code/account number
OUTPUT_HMO_BILLING_MEDICAL_DOCTOR_NAME_COLUMN = 7 + MS_EXCEL_OFFSET
OUTPUT_HMO_BILLING_PAYEE_COLUMN = 8 + MS_EXCEL_OFFSET
OUTPUT_HMO_BILLING_DIAGNOSIS_COLUMN = 9 + MS_EXCEL_OFFSET 'for use as table header only
OUTPUT_HMO_BILLING_DEPARTMENT_COLUMN = 10 + MS_EXCEL_OFFSET
OUTPUT_HMO_BILLING_PROCEDURE_COLUMN = 11 + MS_EXCEL_OFFSET
OUTPUT_HMO_BILLING_DOCTORS_COLUMN = 12 + MS_EXCEL_OFFSET 'for use as table header only
OUTPUT_HMO_BILLING_VAT_EXEMPT_COLUMN = 13 + MS_EXCEL_OFFSET 'for use as table header only
OUTPUT_HMO_BILLING_VATABLE_SALES_COLUMN = 14 + MS_EXCEL_OFFSET 'for use as table header only
OUTPUT_HMO_BILLING_VAT_COLUMN = 15 + MS_EXCEL_OFFSET 'for use as table header only
OUTPUT_HMO_BILLING_TOTAL_AMOUNT_COLUMN = 16 + MS_EXCEL_OFFSET

'added by Mike, 20190324
Dim hmoBillingContainer As Collection
Set hmoBillingContainer = New Collection

Dim hmoBillingColumnValuesContainer As Collection
'Set hmoBillingColumnValuesContainer = New Collection

'added by Mike, 20190327
Dim medicalDoctorWorksheetContainer As Collection 'each Medical Doctor has a worksheet

Dim hmoBillingContainerTransactionCount As Integer

hmoBillingContainerTransactionCount = 1
RowCount = 2 'do not include table header row
RowCountOffset = 0 'This is to make the add-on software automatically adjust to rows with new line marks
OutputRowCount = 1 'added by Mike, 20190325

Set myInput = Sheets(ActiveSheet.name)

'added by Mike, 20190325
Set NewWorkbook = Workbooks.Add
    With NewWorkbook
        .SaveAs Filename:="HMOBillingUtilization.xls"
    End With

'   ImportTextFilesAsWorksheetsInWorkbookUtilizationHMOMarch2019_20190301~20190308

'Set myOutput = Sheets(ActiveSheet.name)

'added by Mike, 20190327
Set medicalDoctorWorksheetContainer = New Collection

For Each row In myInput.Rows
        Set hmoBillingColumnValuesContainer = New Collection

        'MsgBox ("UCase(Trim(myInput.Cells(RowCount, INPUT_DATE_COLUMN))): " & UCase(Trim(myInput.Cells(RowCount, INPUT_DATE_COLUMN + 1))))
                
        If InStr(myInput.Cells(RowCount, INPUT_CLASS_COLUMN).Value, "HMO") = 1 Then
            'TO-DO: -put: values in the containers
            hmoBillingColumnValuesContainer.Add UCase(Trim(myInput.Cells(RowCount, INPUT_DATE_COLUMN))), "" & OUTPUT_HMO_UTILIZATION_DATE_COLUMN
            hmoBillingColumnValuesContainer.Add UCase(Trim(myInput.Cells(RowCount, INPUT_CLASS_COLUMN))), "" & OUTPUT_HMO_UTILIZATION_HMO_NAME_COLUMN
            hmoBillingColumnValuesContainer.Add UCase(Trim(myInput.Cells(RowCount, INPUT_CHARGE_SLIP_NUMBER_COLUMN))), "" & OUTPUT_HMO_BILLING_CHARGE_SLIP_NUMBER_COLUMN
            hmoBillingColumnValuesContainer.Add UCase(Trim(myInput.Cells(RowCount, INPUT_PATIENT_NAME_COLUMN))), "" & OUTPUT_HMO_BILLING_PATIENT_NAME_COLUMN
            hmoBillingColumnValuesContainer.Add UCase(Trim(myInput.Cells(RowCount, INPUT_APPROVAL_CODE_COLUMN))), "" & OUTPUT_HMO_BILLING_APPROVAL_CODE_COLUMN
            'hmoBillingColumnValuesContainer.Add UCase(Trim(myInput.Cells(RowCount, INPUT_REFERRING_DOCTOR_COLUMN))), "" & OUTPUT_HMO_BILLING_MEDICAL_DOCTOR_NAME_COLUMN
            'hmoBillingColumnValuesContainer.Add Replace(Replace(UCase(Trim(myInput.Cells(RowCount, INPUT_REFERRING_DOCTOR_COLUMN))), "DRA. ", ""), "DR. ", ""), "" & OUTPUT_HMO_BILLING_MEDICAL_DOCTOR_NAME_COLUMN
            
            hmoBillingColumnValuesContainer.Add getNameWithLastNameFirst(Replace(Replace(UCase(Trim(myInput.Cells(RowCount, INPUT_REFERRING_DOCTOR_COLUMN))), "DRA. ", ""), "DR. ", "")), "" & OUTPUT_HMO_BILLING_MEDICAL_DOCTOR_NAME_COLUMN
            
            'hmoBillingColumnValuesContainer("" & OUTPUT_HMO_BILLING_MEDICAL_DOCTOR_NAME_COLUMN) = Replace(hmoBillingColumnValuesContainer("" & OUTPUT_HMO_BILLING_MEDICAL_DOCTOR_NAME_COLUMN), "DRA. ", "") 'Replace(Replace(hmoBillingColumnValuesContainer("" & OUTPUT_HMO_BILLING_MEDICAL_DOCTOR_NAME_COLUMN), "DRA. ", ""), "DR. ", "")

            'MsgBox ("input: " & UCase(Trim(myInput.Cells(RowCount, INPUT_REFERRING_DOCTOR_COLUMN))))
            'MsgBox ("input: " & hmoBillingColumnValuesContainer("" & OUTPUT_HMO_BILLING_MEDICAL_DOCTOR_NAME_COLUMN))

            hmoBillingColumnValuesContainer.Add UCase(Trim("" & OUTPUT_HMO_BILLING_PAYEE_VALUE)), "" & OUTPUT_HMO_BILLING_PAYEE_COLUMN
            hmoBillingColumnValuesContainer.Add UCase(Trim(myInput.Cells(RowCount, INPUT_DIAGNOSIS_COLUMN))), "" & OUTPUT_HMO_BILLING_DIAGNOSIS_COLUMN
            hmoBillingColumnValuesContainer.Add UCase(Trim("" & OUTPUT_HMO_BILLING_DEPARTMENT_PT_VALUE)), "" & OUTPUT_HMO_BILLING_DEPARTMENT_COLUMN
            hmoBillingColumnValuesContainer.Add UCase(Trim("" & OUTPUT_HMO_BILLING_PROCEDURE_PT_VALUE)), "" & OUTPUT_HMO_BILLING_PROCEDURE_COLUMN
            hmoBillingColumnValuesContainer.Add UCase(Trim(myInput.Cells(RowCount, INPUT_FEE_COLUMN))), "" & OUTPUT_HMO_BILLING_TOTAL_AMOUNT_COLUMN
            
            'MsgBox ("value: " & hmoBillingColumnValuesContainer("" & OUTPUT_HMO_UTILIZATION_DATE_COLUMN))
            'myOutput.Cells(RowCount, OUTPUT_HMO_UTILIZATION_DATE_COLUMN).Value = "" & hmoBillingColumnValuesContainer("" & OUTPUT_HMO_UTILIZATION_DATE_COLUMN)
            
            'MsgBox ("value: " & hmoBillingColumnValuesContainer("" & OUTPUT_HMO_UTILIZATION_HMO_NAME_COLUMN))
            
            hmoBillingContainer.Add hmoBillingColumnValuesContainer, "" & hmoBillingContainerTransactionCount
            hmoBillingContainerTransactionCount = hmoBillingContainerTransactionCount + 1
                                
            'MsgBox ("value: " & hmoBillingColumnValuesContainer("" & OUTPUT_HMO_UTILIZATION_DATE_COLUMN))
            'myOutput.Cells(OutputRowCount, OUTPUT_HMO_UTILIZATION_DATE_COLUMN).Value = "" & hmoBillingColumnValuesContainer("" & OUTPUT_HMO_UTILIZATION_DATE_COLUMN)
            'myOutput.Cells(OutputRowCount, OUTPUT_HMO_UTILIZATION_HMO_NAME_COLUMN).Value = "" & Replace(hmoBillingColumnValuesContainer("" & OUTPUT_HMO_UTILIZATION_HMO_NAME_COLUMN), "HMO/", "")

            'added by Mike, 20190327
            'add a worksheet in the output workbook for each medical doctor
'           medicalDoctorName = hmoBillingColumnValuesContainer("" & OUTPUT_HMO_BILLING_MEDICAL_DOCTOR_NAME_COLUMN)
'            medicalDoctorWorksheetContainer.Add NewWorkbook.Sheets.Add, medicalDoctorName
            'write Medical Doctor name as the worksheet name
'            MsgBox ("medicalDoctorName: " & medicalDoctorName)
'            medicalDoctorWorksheetContainer(medicalDoctorName).Name = medicalDoctorName
            
            'OutputRowCount = OutputRowCount + 1
        End If
                            
        If IsEmpty(myInput.Range("C" & RowCount).Value) Then
            Exit For
        Else
            RowCount = RowCount + 1
        End If
Next row

'added by Mike, 20190327

For Each hmoBillingColumnValuesContainer In hmoBillingContainer
    'added by Mike, 20190327
    medicalDoctorName = hmoBillingColumnValuesContainer("" & OUTPUT_HMO_BILLING_MEDICAL_DOCTOR_NAME_COLUMN)

    'If a workheet with the Medical Doctor's name exists
    If Evaluate("ISREF('" & medicalDoctorName & "'!A1)") Then
'        myOutput.Cells(OutputRowCount, OUTPUT_HMO_UTILIZATION_DATE_COLUMN).Value = "" & hmoBillingColumnValuesContainer("" & OUTPUT_HMO_UTILIZATION_DATE_COLUMN)
'        myOutput.Cells(OutputRowCount, OUTPUT_HMO_UTILIZATION_HMO_NAME_COLUMN).Value = "" & Replace(hmoBillingColumnValuesContainer("" & OUTPUT_HMO_UTILIZATION_HMO_NAME_COLUMN), "HMO/", "")
    
    'If a workheet with the Medical Doctor's name does not exist
    Else
        NewWorkbook.Sheets.Add.name = medicalDoctorName
            
        Set myOutput = Sheets(ActiveSheet.name)
    
        'added by Mike, 20190327
        'add the portion above the table header row
        myOutput.Cells(1, OUTPUT_HMO_UTILIZATION_MD_SIGNATURE_COLUMN).Value = "PHYSICIAN:"
        myOutput.Cells(1, OUTPUT_HMO_UTILIZATION_MD_SIGNATURE_COLUMN + 1).Value = medicalDoctorName
        
        'added by Mike, 20190328
        myOutput.Cells(2, OUTPUT_HMO_UTILIZATION_MD_SIGNATURE_COLUMN).Value = "PERIOD COVERED:"
        
        myOutput.Cells(3, OUTPUT_HMO_UTILIZATION_DIAGNOSIS_COLUMN).Value = "CONSULTATION"
        myOutput.Cells(4, OUTPUT_HMO_UTILIZATION_DIAGNOSIS_COLUMN).Value = "STA. LUCIA HEALTH CARE CENTRE, INC."
        myOutput.Cells(5, OUTPUT_HMO_UTILIZATION_DIAGNOSIS_COLUMN).Value = "HMO UTILIZATION SUMMARY"
        
'        myOutput.Cells(OutputRowCount, OUTPUT_HMO_UTILIZATION_HMO_NAME_COLUMN).Value = "" & Replace(hmoBillingColumnValuesContainer("" & OUTPUT_HMO_UTILIZATION_HMO_NAME_COLUMN), "HMO/", "")
            
            
            'write Medical Doctor name as the worksheet name
'            MsgBox ("medicalDoctorName: " & medicalDoctorName)
'            medicalDoctorWorksheetContainer(medicalDoctorName).Name = medicalDoctorName
            

    End If

'    myOutput.Cells(OutputRowCount, OUTPUT_HMO_UTILIZATION_DATE_COLUMN).Value = "" & hmoBillingColumnValuesContainer("" & OUTPUT_HMO_UTILIZATION_DATE_COLUMN)
'    myOutput.Cells(OutputRowCount, OUTPUT_HMO_UTILIZATION_HMO_NAME_COLUMN).Value = "" & Replace(hmoBillingColumnValuesContainer("" & OUTPUT_HMO_UTILIZATION_HMO_NAME_COLUMN), "HMO/", "")
    
    OutputRowCount = OutputRowCount + 1
Next hmoBillingColumnValuesContainer

End Sub

'added by Mike, 20190327
'input: MICHAEL SYSON
'output: SYSON, MICHAEL
'input: MICHAEL DELA PAZ
'output: DELA PAZ, MICHAEL
Private Function getNameWithLastNameFirst(name As String) As String
nameArray = Split(name, " ")
lastName = Trim(nameArray(UBound(nameArray)))
firstName = ""

For i = LBound(nameArray) To UBound(nameArray) - 1
    firstName = firstName & " " & nameArray(i)
Next

'MsgBox ("value: " & firstName)
'MsgBox ("name: " & name)

'if the name has "DELA"
If InStr(Trim(name), "DELA") > 0 Then
'MsgBox ("name: " & name)

    lastName = "DELA " & lastName
    firstName = Replace(firstName, "DELA", "")
End If
           
'MsgBox ("lastName: " & lastName)
           
getNameWithLastNameFirst = lastName & ", " & Trim(firstName)

'MsgBox ("returnOutput: " & returnOutput)

End Function




//added by Mike, 20190227
			SortedSet<Integer> sortedKeyset = new TreeSet<Integer>(hmoBillingContainer.keySet());		
			SortedSet<String> sortedMedicalDoctorPrintWriterKeyset = new TreeSet<String>(medicalDoctorPrintWriterContainer.keySet());		

			String medicalDoctorNameKey = "";
			
			//added by Mike, 20190301
			for (String key : sortedMedicalDoctorPrintWriterKeyset) {					
				//added by Mike, 20190301
				//write the top portion above the table header			
				//write an additional Tab, i.e. "\t", at the end of each row
				//this is so that the present add-on software as MS Excel Macro can properly copy and paste all the columns with written data
				//added by Mike, 20190305
				medicalDoctorPrintWriterContainer.get(key).println(
												addTabUntilColumn(OUTPUT_HMO_UTILIZATION_MD_SIGNATURE_COLUMN)+
												"PHYSICIAN:"+"\t"+getHMOBillingNameFormat(key)+"\t"
										   ); 				   											
				//added by Mike, 20190305
				medicalDoctorPrintWriterContainer.get(key).println(
												addTabUntilColumn(OUTPUT_HMO_UTILIZATION_MD_SIGNATURE_COLUMN)+
												"PERIOD COVERED:"+"\t"
										   ); 				   											

				medicalDoctorPrintWriterContainer.get(key).println(
												addTabUntilColumn(OUTPUT_HMO_UTILIZATION_DIAGNOSIS_COLUMN)+
												"CONSULTATION"+"\t"
										   ); 				   											

				medicalDoctorPrintWriterContainer.get(key).println(
												addTabUntilColumn(OUTPUT_HMO_UTILIZATION_DIAGNOSIS_COLUMN)+
												"STA. LUCIA HEALTH CARE CENTRE, INC."+"\t"
										   ); 	
										   
				medicalDoctorPrintWriterContainer.get(key).println(

												addTabUntilColumn(OUTPUT_HMO_UTILIZATION_DIAGNOSIS_COLUMN)+
												"HMO UTILIZATION SUMMARY"+"\t"
										   ); 				   											
				
				for(int k=0; k<hmoUtilizationTableHeaderArrayList.size(); k++) {
					medicalDoctorPrintWriterContainer.get(key).print(								
												hmoUtilizationTableHeaderArrayList.get(k)+"\t"
										   ); 				   											
				}
					
				medicalDoctorPrintWriterContainer.get(key).println(); 				   											
			}

			for (Integer key : sortedKeyset) {			
				medicalDoctorNameKey = hmoBillingContainer.get(key)[OUTPUT_HMO_BILLING_MEDICAL_DOCTOR_NAME_COLUMN];

				//added by Mike, 20190305
				//Do not write PT Treatment transactions
				if (hmoBillingContainer.get(key)[OUTPUT_HMO_BILLING_DEPARTMENT_COLUMN].equals(OUTPUT_HMO_BILLING_DEPARTMENT_PT_VALUE)) {
					continue;
				}
				
				//edited by Mike, 20190303	
				if (medicalDoctorPrintWriterContainer.containsKey(medicalDoctorNameKey)) {				
	//				for (int i=0; i<OUTPUT_HMO_UTILIZATION_SUMMARY_TOTAL_COLUMNS; i++) {
						medicalDoctorPrintWriterContainer.get(medicalDoctorNameKey).print(								
														getDateAsHMOBillingFormat(
															hmoBillingContainer.get(key)[OUTPUT_HMO_BILLING_DATE_COLUMN]
															)+"\t"
													); 				   											

						medicalDoctorPrintWriterContainer.get(medicalDoctorNameKey).print(								
														hmoBillingContainer.get(key)[OUTPUT_HMO_BILLING_PATIENT_NAME_COLUMN]+"\t"
													); 				   											

						medicalDoctorPrintWriterContainer.get(medicalDoctorNameKey).print(								
														hmoBillingContainer.get(key)[OUTPUT_HMO_BILLING_HMO_NAME_COLUMN]+"\t"
													); 				   											

						medicalDoctorPrintWriterContainer.get(medicalDoctorNameKey).print(								
														hmoBillingContainer.get(key)[OUTPUT_HMO_BILLING_DIAGNOSIS_COLUMN]+"\t"
													); 				   											

						//MD'S SIGNATURE
						medicalDoctorPrintWriterContainer.get(medicalDoctorNameKey).print(								
														"\t"
													); 				   											

						//RECEIVED BY/DATE
						medicalDoctorPrintWriterContainer.get(medicalDoctorNameKey).print(								
														"\t"
													); 				   											
					medicalDoctorPrintWriterContainer.get(medicalDoctorNameKey).println();
				}
			}
					
			for (Integer key : sortedKeyset) {			
				medicalDoctorNameKey = hmoBillingContainer.get(key)[OUTPUT_HMO_BILLING_MEDICAL_DOCTOR_NAME_COLUMN];
/*				medicalDoctorPrintWriterContainer.get(medicalDoctorNameKey).close();
*/
				if (medicalDoctorPrintWriterContainer.containsKey(medicalDoctorNameKey)) {
					medicalDoctorPrintWriterContainer.get(medicalDoctorNameKey).close();
				}
			}
			
			//added by Mike, 20190305
			//for PT Treatment transactions
			treatmentTransactionsWriter = new PrintWriter("output/utilization/treatmentOutput.txt", "UTF-8");							
			writeOutput(treatmentTransactionsWriter, false);		
			
			
--

public static void writeOutput(PrintWriter writer, boolean isConsultation) {
			SortedSet<Integer> sortedKeyset = new TreeSet<Integer>(hmoBillingContainer.keySet());		

			String hmoNameKey = "";

			//added by Mike, 20190301
			//write the top portion above the table header			
			//write an additional Tab, i.e. "\t", at the end of each row
			//this is so that the present add-on software as MS Excel Macro can properly copy and paste all the columns with written data
			//added by Mike, 20190305; edited by Mike, 20190310
			writer.println(
										addTabUntilColumn(OUTPUT_HMO_UTILIZATION_MD_SIGNATURE_COLUMN)+
										"PHYSICIAN:"+"\t"+OUTPUT_HMO_BILLING_MEDICAL_DOCTOR_NAME_PT_VALUE+"\t" 
								    ); 				   											
			//added by Mike, 20190305
			writer.println(
										addTabUntilColumn(OUTPUT_HMO_UTILIZATION_MD_SIGNATURE_COLUMN)+
										"PERIOD COVERED:"+"\t"
								   ); 		

			writer.println(
										addTabUntilColumn(OUTPUT_HMO_UTILIZATION_DIAGNOSIS_COLUMN)+
												"PT TREATMENT"+"\t"
								   ); 				   											
								   

			writer.println(
											addTabUntilColumn(OUTPUT_HMO_UTILIZATION_DIAGNOSIS_COLUMN)+
											"STA. LUCIA HEALTH CARE CENTRE, INC."+"\t"
									   ); 				   											
			writer.println(
											addTabUntilColumn(OUTPUT_HMO_UTILIZATION_DIAGNOSIS_COLUMN)+
											"HMO UTILIZATION SUMMARY"+"\t"
									   ); 				   											
				
			for(int k=0; k<hmoUtilizationTableHeaderArrayList.size(); k++) {
				writer.print(								
											hmoUtilizationTableHeaderArrayList.get(k)+"\t"
									   ); 				   											
			}

			writer.println(); 				   											

			for (Integer key : sortedKeyset) {
//				hmoNameKey = hmoBillingContainer.get(key)[OUTPUT_HMO_BILLING_HMO_NAME_COLUMN];
				if (isConsultation) {					 
					if (hmoBillingContainer.get(key)[OUTPUT_HMO_BILLING_PROCEDURE_COLUMN].trim().toUpperCase().contains("CONSULT")) {
							writeTransactionsOutput(writer, key);
					}										
				}	
				else {
					if (!hmoBillingContainer.get(key)[OUTPUT_HMO_BILLING_PROCEDURE_COLUMN].trim().toUpperCase().contains("CONSULT")) {
							writeTransactionsOutput(writer, key);
					}										
				}
			}
			
			writer.close();
	}
	
	private static void writeTransactionsOutput(PrintWriter writer, Integer key) {
			writer.print(								
					getDateAsHMOBillingFormat(
						hmoBillingContainer.get(key)[OUTPUT_HMO_BILLING_DATE_COLUMN]
						)+"\t"
				); 				   											

			writer.print(								
											hmoBillingContainer.get(key)[OUTPUT_HMO_BILLING_PATIENT_NAME_COLUMN]+"\t"
										); 				   											

			writer.print(								
											hmoBillingContainer.get(key)[OUTPUT_HMO_BILLING_HMO_NAME_COLUMN]+"\t"
										); 				   											

			writer.print(								
											hmoBillingContainer.get(key)[OUTPUT_HMO_BILLING_DIAGNOSIS_COLUMN]+"\t"
										); 				   											

			//MD'S SIGNATURE
			writer.print(								
											"\t"
										); 				   											

			//RECEIVED BY/DATE
			writer.print(								
											"\t"
										); 				   											
										
			writer.println();
	}
	