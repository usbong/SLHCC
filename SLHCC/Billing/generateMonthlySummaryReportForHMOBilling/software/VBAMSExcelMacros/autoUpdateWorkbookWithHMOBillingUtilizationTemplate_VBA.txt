Sub autoUpdateWorkbookWithHMOBillingUtilizationTemplate()
' Copyright 2019 Usbong Social Systems, Inc.
'
' Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You ' may obtain a copy of the License at
'
' http://www.apache.org/licenses/LICENSE-2.0
'
' Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, ' WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing ' permissions and limitations under the License.
'
' @author: Michael Syson
' @date created: 20190305
' @date updated: 20190309
'
' Given:
' 1) Workbook with the HMO Billing data
'
'Output:
' 1) Auto-update Workbook with HMO Billing Utilization Template from Sta. Lucia Health Care Centre (SLHCC)
'
Dim myInput As Worksheet
Dim myOutput As Worksheet 'the same as myInput
Dim row As Range
Dim RowCount As Integer
Dim TableHeaderRow As Integer
Dim LastPrintableRow As Integer
Dim MaxPatientNameColumnWidth As Integer
Dim patientNameFontSize As Integer

RowCount = 1
TableHeaderRow = 6
'LastPrintableRow = 33
MaxDiagnosisColumnWidthPixels = 506 '11pt font * 46 characters in Pixels
DiagnosisFontSize = 11
MaxColumnWidthInCharacters = 46

Set myInput = Sheets(ActiveSheet.Name)
Set myOutput = Sheets(ActiveSheet.Name)

'Auto-fit Date column based on actual value
myOutput.Range("A" & TableHeaderRow + 1, "A" & TableHeaderRow + 1).Select
Selection.EntireColumn.AutoFit 'edited by Mike, 20190309
'Selection.EntireColumn.ColumnWidth = 12

'Auto-fit select columns based on the table header row
myOutput.Range("B" & TableHeaderRow, "F" & TableHeaderRow).Select
Selection.EntireColumn.AutoFit

'Auto-fit DIAGNOSIS column
myOutput.Range("D" & TableHeaderRow, "D" & TableHeaderRow).Select
Selection.EntireColumn.ColumnWidth = 46


'Auto-update font size of value of DIAGNOSIS based on the following:
'max column width: 46
'max number of characters in value: 44
'default font size: 11
'font style: Calibri
For Each row In myInput.Rows
       'added by Mike, 20190309
        myOutput.Range("D" & RowCount, "D" & RowCount).Font.Name = "Calibri"
        myOutput.Range("D" & RowCount, "D" & RowCount).Font.Size = DiagnosisFontSize

        If RowCount <= TableHeaderRow Then
            'MsgBox ("RowCount: " & RowCount)

            myOutput.Range("A" & RowCount, "F" & RowCount).Font.Bold = True
            RowCount = RowCount + 1
        Else
        
            diagnosisValue = myInput.Range("D" & RowCount, "D" & RowCount).Value
            diagnosisValueLength = Len(myInput.Range("D" & RowCount, "D" & RowCount).Value)
            diagnosisValueArray = Split(myInput.Range("D" & RowCount, "D" & RowCount).Value, " ")
            output = Trim(diagnosisValue)
            
            'MsgBox ("RowCount: " & RowCount)
            'MsgBox ("patientNameValueLength: " & patientNameValueLength)
    
            If diagnosisValueLength > MaxColumnWidthInCharacters Then
                output = ""
                temp = ""
                'MsgBox ("diagnosisValue: " & diagnosisValue)
               ' MsgBox ("diagnosisValueLength: " & diagnosisValueLength)
                'MsgBox ("MaxColumnWidthInCharacters: " & MaxColumnWidthInCharacters)
                    
                    For Index = LBound(diagnosisValueArray) To UBound(diagnosisValueArray)
                   ' MsgBox ("temp: " & temp)
                        Value = diagnosisValueArray(Index)
                        temp = temp & " " & Value
                        If Len(temp) > MaxColumnWidthInCharacters Then
                            output = output & vbCrLf & Value 'add new line
                            temp = Value
                        Else
                            output = output & " " & Value
                        End If
                    Next
                    
            End If
            
            'edited by Mike, 20190309
            'remove the excess character encoding, i.e. 'Â', due to reading the file in non-UTF-8 encoding or file origin
            myInput.Range("D" & RowCount, "D" & RowCount).Value = Replace(Trim(output), "Â", "")
            
            If IsEmpty(myInput.Range("C" & RowCount).Value) Then
                Exit For
            Else
                RowCount = RowCount + 1
            End If
        End If
Next row

myOutput.Range("A" & 1, "F" & RowCount).Font.Size = 11
myOutput.Range("A" & 1, "F" & RowCount).Font.Name = "Calibri"
'myOutput.Range("A" & 1, "Q" & RowCount).NumberFormat = "0.00"

'added by Mike, 20190305; edited by Mike, 20190309
myOutput.Range("A" & TableHeaderRow, "F" & RowCount).Borders.LineStyle = 1
'added by Mike, 20190306
myOutput.PageSetup.Orientation = xlLandscape
'added by Mike, 20190306
'Set Margins to Narrow
'The values below are already in cm or centimeters
myOutput.PageSetup.TopMargin = 1.91
myOutput.PageSetup.BottomMargin = 1.91
myOutput.PageSetup.LeftMargin = 0.64
myOutput.PageSetup.RightMargin = 0.64
myOutput.PageSetup.HeaderMargin = 0.76
myOutput.PageSetup.FooterMargin = 0.76

'added by Mike, 20190309
'add bottom border in F1 and F2
myOutput.Range("F" & 1).Borders(xlEdgeBottom).LineStyle = 1
myOutput.Range("F" & 2).Borders(xlEdgeBottom).LineStyle = 1

'added by Mike, 20190309
'align to the right the values in E1, i.e. "PHYSICIAN:", and E2, i.e. "PERIOD COVERED:"
myOutput.Range("E" & 1).HorizontalAlignment = xlRight
myOutput.Range("E" & 2).HorizontalAlignment = xlRight

'added by Mike, 20190309
'align to the center the values in D3, D4, and D5, above the table header row
myOutput.Range("D" & 3).HorizontalAlignment = xlCenter
myOutput.Range("D" & 4).HorizontalAlignment = xlCenter
myOutput.Range("D" & 5).HorizontalAlignment = xlCenter

'added by Mike, 20190309
'align to the center the values in the table header row
myOutput.Range("A" & 6, "F" & 6).HorizontalAlignment = xlCenter

'added by Mike, 20190309
'align to the center vertically all the values in the table
myOutput.Range("A" & TableHeaderRow, "F" & RowCount).VerticalAlignment = xlCenter
End Sub
