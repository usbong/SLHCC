Sub generatePayslipForTheDayPTTreatment()
' Copyright 2019 Usbong Social Systems, Inc.
'
' Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You ' may obtain a copy of the License at
'
' http://www.apache.org/licenses/LICENSE-2.0
'
' Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, ' WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing ' permissions and limitations under the License.
'
' @author: Michael Syson
' @date created: 20190307
' @date updated: 20190509
'
' Given:
' 1) Worksheet with the payslip data
'
'Output:
' 1) New auto-updated Worksheet with the payslip data based on the payslip template for PT Treatment
' 2) Automatically verified and corrected if necessary the computation in the worksheet with the payslip data
' 3) New workbook with auto-updated Worksheets for each transaction based on the OR template for PT Treatment
' 4) Automatically verified and corrected if necessary the computation in each of the worksheets with the transaction data in the new Workbook
'
Dim myInput As Worksheet
Dim myOutput As Worksheet 'not the same as myInput
Dim row As Range
Dim RowCount As Integer
Dim TableHeaderRow As Integer
Dim LastPrintableRow As Integer
Dim MaxPatientNameColumnWidth As Integer
Dim patientNameFontSize As Integer
Dim particularsFontSize As Integer 'added by Mike, 20190323
Dim defaultFontName As String 'added by Mike, 20190314
Dim totalAmountReleasedValue As String 'added by Mike, 20190316

RowCount = 1
TableHeaderRow = 5 'output
LastPrintableRow = 16 'including the TOTAL PF
MaxPatientNameValueLength = 18 'characters in Pixels 'added by Mike, 20190323
MaxPatientNameColumnWidthPixels = 216 '12pt font * 18 characters in Pixels
patientNameFontSize = 12
MaxParticularsValueLength = 8 'characters in Pixels 'added by Mike, 20190323
MaxParticularsColumnWidthPixels = 96 '12pt font * 8 characters in Pixels 'added by Mike, 20190323
particularsFontSize = 12 'added by Mike, 20190323
defaultFontName = "Arial" 'added by Mike, 20190314
totalAmountReleasedValue = 0 'added by Mike, 20190316

Set myTemplate = Sheets("PT Treatment Template")
Set myInput = Sheets(ActiveSheet.name)

'added by Mike, 20190314
Application.ScreenUpdating = False

myTemplate.Copy ActiveWorkbook.Sheets(Sheets.Count)
Set myOutput = Sheets(ActiveSheet.name)
myOutput.name = Replace(myOutput.name, "Template (2)", "") & myInput.name

'edited by Mike, 20190317
'At present, this component/part is not used.
'---------------------------------------------------------
'Auto-verify and correct if necessary the computations
'in the input worksheet component/part
'---------------------------------------------------------
'myInput.Activate

'RowCount = TableHeaderRow + 2 'input
'For Each row In myInput.Rows
'        If InStr(myInput.Range("D" & RowCount).Value, "SC") Or InStr(myInput.Range("D" & RowCount).Value, "PWD") Then 'if TRUE
'          'VAT column
'          myInput.Range("F" & RowCount).Value = 0
'
'          'ORTHO & PT DEPT/REHAB Share (70%) column
'          myInput.Range("G" & RowCount).Value = myInput.Range("E" & RowCount).Value * 0.7 * 0.9
'
'          'EWT column
'          myInput.Range("H" & RowCount).Value = myInput.Range("E" & RowCount).Value * 0.7 * 0.1
'
'          'Management Share column
'          myInput.Range("I" & RowCount).Value = myInput.Range("E" & RowCount).Value * 0.3
'        Else 'if SLC or PT, i.e. Walk-In
'          'VAT column
'          myInput.Range("F" & RowCount).Value = myInput.Range("E" & RowCount).Value / 1.12 * 0.12
'
'          'ORTHO & PT DEPT/REHAB Share (70%) column
'          myInput.Range("G" & RowCount).Value = myInput.Range("E" & RowCount).Value / 1.12 * 0.7 * 0.9
'
'          'Amount Released column
'          myInput.Range("N" & RowCount).Value = myInput.Range("G" & RowCount).Value
'
'          'EWT column
'          myInput.Range("H" & RowCount).Value = myInput.Range("E" & RowCount).Value / 1.12 * 0.7 * 0.1
'
'          'Management Share column
'          myInput.Range("I" & RowCount).Value = myInput.Range("E" & RowCount).Value / 1.12 * 0.3
'
'          'Discount Amount column
'          If InStr(myInput.Range("D" & RowCount).Value, "SLC") = 1 Then
'            myInput.Range("L" & RowCount).Value = 500 - myInput.Range("E" & RowCount).Value
'          End If
'        End If
'
'        'added by Mike, 20190316
'        totalAmountReleasedValue = totalAmountReleasedValue + myInput.Range("G" & RowCount).Value
'
'        If IsEmpty(myInput.Range("C" & RowCount).Value) Then
'           Exit For
'        Else
'           RowCount = RowCount + 1
'        End If
'Next row
'
'myInput.Range("G" & 17).Value = totalAmountReleasedValue
'myInput.Range("G" & 17).Interior.Color = vbYellow
'myInput.Range("N" & 17).Value = totalAmountReleasedValue
'myInput.Range("N" & 17).Interior.Color = vbYellow
'
''added by Mike, 20190316; edited by Mike, 20190317
'myInput.Range("E" & TableHeaderRow + 2, "L" & RowCount - 1).NumberFormat = "_(* #,##0.00_);_(* (#,##0.00);_(* "" - ""??_);_(@_)" '"0.00"
''myInput.Range("E" & TableHeaderRow + 2, "L" & RowCount - 1).HorizontalAlignment = xlCenter

'---------------------------------------------------------
'Auto-copy contents component/part
'---------------------------------------------------------
RowCount = TableHeaderRow + 2 'input
OutputRowCountOffset = -1
For Each row In myInput.Rows
'      If RowCount > TableHeaderRow Then
        myInput.Range("A" & RowCount, "I" & RowCount).Columns.Copy
        myInput.Select
        myOutput.Range("A" & RowCount + OutputRowCountOffset, "I" & RowCount + OutputRowCountOffset).PasteSpecial
      
        'edited by Mike, 20190504
        RowCount = RowCount + 1
                            
        If IsEmpty(myInput.Range("C" & RowCount).Value) Then
            Exit For
'        Else
'            RowCount = RowCount + 1
        End If
Next row
            
'---------------------------------------------------------
'Auto-fit component/part
'---------------------------------------------------------
myOutput.Activate

'added by Mike, 20190322
startRowCount = TableHeaderRow + 2 + OutputRowCountOffset
endRowCount = RowCount - 1 + OutputRowCountOffset

'added by Mike, 20190322
'Auto-set the format of the "AMOUNT", "VAT - OT", "PF", "EWT", "M. SHARE"
myOutput.Range("E" & startRowCount, "I" & endRowCount).NumberFormat = "0.00"

'Auto-fit Date column based on max length of actual value
myOutput.Range("A" & TableHeaderRow + 1, "A" & TableHeaderRow + 1).Select
Selection.EntireColumn.ColumnWidth = 12
Selection.EntireColumn.Font.Size = 13
'Selection.EntireColumn.AutoFit

'Auto-fit select columns based on the table header row
myOutput.Range("B" & TableHeaderRow + 1, "I" & TableHeaderRow + 1).Select
Selection.EntireColumn.AutoFit

'Auto-fit PATIENT NAME column based on the max length of the actual values
myOutput.Range("C" & TableHeaderRow, "C" & TableHeaderRow).Select
Selection.EntireColumn.ColumnWidth = 26
Selection.EntireColumn.HorizontalAlignment = xlCenter
myOutput.Range("C" & startRowCount, "C" & endRowCount).Font.FontStyle = "Bold"

'Auto-fit PARTICULARS column based on the max length of the actual values
myOutput.Range("D" & TableHeaderRow, "D" & TableHeaderRow).Select
Selection.EntireColumn.ColumnWidth = 12

'Auto-fit PF column based on the max length of the actual values
myOutput.Range("G" & TableHeaderRow, "G" & TableHeaderRow).Select
Selection.EntireColumn.ColumnWidth = 12

'Auto-fit EWT column based on the max length of the actual values
myOutput.Range("H" & TableHeaderRow, "H" & TableHeaderRow).Select
Selection.EntireColumn.ColumnWidth = 12

'Auto-align OR NO. column to the center horizontally
myOutput.Range("B" & TableHeaderRow, "B" & TableHeaderRow).Select
Selection.EntireColumn.HorizontalAlignment = xlCenter
Selection.EntireColumn.Font.Size = 14

'Auto-update Font Size
myOutput.Range("D" & TableHeaderRow + 1, "I" & LastPrintableRow).Font.Size = 14

'Auto-update border
'-1 to not include the Total PF row
myOutput.Range("A" & TableHeaderRow, "I" & LastPrintableRow - 1).Borders.LineStyle = 1

'Auto-update font size of PATIENT NAME based on the following whose actual values are set above, at the start of the instructions:
'max column width
'max length of value
'font size
'font style
RowCount = TableHeaderRow + 1
For Each row In myOutput.Rows
            myOutput.Range("C" & RowCount, "C" & RowCount).Font.name = defaultFontName
            myOutput.Range("C" & RowCount, "C" & RowCount).Font.Size = patientNameFontSize

            patientNameValueLength = Len(myOutput.Range("C" & RowCount, "C" & RowCount).Value)
            'MsgBox ("RowCount: " & RowCount)
            'MsgBox ("patientNameValueLength: " & patientNameValueLength)

            If patientNameValueLength > MaxPatientNameValueLength Then 'edited by Mike, 20190323
                currentPatientNameFontSize = patientNameFontSize
                currentPatientNameColumnWidthPixels = patientNameValueLength * currentPatientNameFontSize
                
                Do Until currentPatientNameColumnWidthPixels < MaxPatientNameColumnWidthPixels
                    currentPatientNameFontSize = currentPatientNameFontSize - 1
                    currentPatientNameColumnWidthPixels = patientNameValueLength * currentPatientNameFontSize
                Loop
                
            myOutput.Range("C" & RowCount, "C" & RowCount).Font.Size = currentPatientNameFontSize
            
            'MsgBox ("currentPatientNameFontSize: " & currentPatientNameFontSize)
            'MsgBox ("currentPatientNameColumnWidthPixels : " & currentPatientNameColumnWidthPixels)
                     
                     
            End If
                   
                   
        'edited by Mike, 20190504
        RowCount = RowCount + 1
                            
        If IsEmpty(myInput.Range("C" & RowCount).Value) Then
            Exit For
'        Else
'            RowCount = RowCount + 1
        End If
        
Next row

'added by Mike, 20190323
'Auto-update font size of PARTICULARS based on the following whose actual values are set above, at the start of the instructions:
'max column width
'max length of value
'font size
'font style
RowCount = TableHeaderRow + 1
For Each row In myOutput.Rows
            myOutput.Range("D" & RowCount, "D" & RowCount).Font.name = defaultFontName
            myOutput.Range("D" & RowCount, "D" & RowCount).Font.Size = particularsFontSize

            particularsValueLength = Len(myOutput.Range("D" & RowCount, "D" & RowCount).Value)
            'MsgBox ("RowCount: " & RowCount)
            'MsgBox ("particularsValueLength: " & particularsValueLength)
            'MsgBox ("value: " & myOutput.Range("D" & RowCount, "D" & RowCount).Value)

            If particularsValueLength > MaxParticularsValueLength Then
                'MsgBox ("value: " & myOutput.Range("D" & RowCount, "D" & RowCount).Value)

                currentParticularsFontSize = particularsFontSize
                currentParticularsColumnWidthPixels = particularsValueLength * currentParticularsFontSize
                
                Do Until currentParticularsColumnWidthPixels < MaxParticularsColumnWidthPixels
                    currentParticularsFontSize = currentParticularsFontSize - 1
                    currentParticularsColumnWidthPixels = particularsValueLength * currentParticularsFontSize
                Loop
                
            myOutput.Range("D" & RowCount, "D" & RowCount).Font.Size = currentParticularsFontSize
            
            'MsgBox ("currentParticularsFontSize: " & currentParticularsFontSize)
            'MsgBox ("currentParticularsColumnWidthPixels : " & currentParticularsColumnWidthPixels)
                     
                     
            End If
                   
        'edited by Mike, 20190504
        RowCount = RowCount + 1
                            
        If IsEmpty(myInput.Range("D" & RowCount).Value) Then
            Exit For
'        Else
'            RowCount = RowCount + 1
        End If

Next row

'added by Mike, 201903014
myOutput.Range("A" & 1, "I" & LastPrintableRow).Font.name = defaultFontName

'added by Mike, 20190315; edited by Mike, 20190323
transactionDateValue = myOutput.Range("A" & TableHeaderRow + 1).Value
myOutput.Range("G" & 19).Value = "Date: " & Format(transactionDateValue, "dd mmm yyyy")
myOutput.Range("G" & 19).Font.name = defaultFontName
myOutput.Range("G" & 19).Font.Size = 14

'added by Mike, 20190315; edited by Mike, 20190321
'myOutput.Range("F" & 1).Value = "MANUFACTURED: " & Format(Now(), "yyyy-MM-ddTHH:mm:ss+08:00") 'Format(Now(), "dd/MM/yyyy hh:mm:ss")
myOutput.Range("F" & 1).Value = Format(Now(), "yyyy-MM-ddTHH:mm:ss") 'Format(Now(), "dd/MM/yyyy hh:mm:ss")
myOutput.Range("F" & 1).Font.name = defaultFontName
myOutput.Range("F" & 1).Font.Size = 10
myOutput.Range("F" & 1).Font.FontStyle = "Bold"

'added by Mike, 20190321
'"OR NO." Column
myOutput.Range("B" & TableHeaderRow + 1, "B" & RowCount - 1).NumberFormat = 0

'added by Mike, 20190322
'"PARTICULARS" Column
myOutput.Range("D" & TableHeaderRow + 1, "D" & RowCount - 1).Font.Size = 12
myOutput.Range("D" & TableHeaderRow + 1, "D" & RowCount - 1).Font.FontStyle = "Bold"

'added by Mike, 20190321
'myOutput.Range("E" & TableHeaderRow + 1, "I" & RowCount - 1).NumberFormat = "0.00"
'myOutput.Range("E" & TableHeaderRow + 1, "I" & RowCount - 1).HorizontalAlignment = xlRight

myOutput.Range("G" & 16).NumberFormat = "0.00"
myOutput.Range("G" & 16).HorizontalAlignment = xlRight
'myOutput.Range("G" & 16).HorizontalAlignment = xlCenter
'myOutput.Range("G" & 16).Font.FontStyle = "Bold"

'added by Mike, 20190314
Application.ScreenUpdating = True

End Sub

Sub generateORSlipForTheDayPTTreatment()
' Copyright 2019 Usbong Social Systems, Inc.
'
' Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You ' may obtain a copy of the License at
'
' http://www.apache.org/licenses/LICENSE-2.0
'
' Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, ' WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing ' permissions and limitations under the License.
'
' @author: Michael Syson
' @date created: 20190509
' @date updated: 20190522
'
' Given:
' 1) Worksheet with the payslip data
'
'Output:
' 1) New workbook with auto-updated Worksheets for each transaction based on the OR template for PT Treatment
' 2) Automatically verified and corrected if necessary the computation in each of the worksheets with the transaction data in the new Workbook
'
Dim myInputWorkbook As Workbook 'added by Mike, 20190509
Dim myInput As Worksheet
Dim myOutput As Worksheet 'not the same as myInput
Dim row As Range
Dim RowCount As Integer
Dim TableHeaderRow As Integer
Dim LastPrintableRow As Integer
Dim MaxPatientNameColumnWidth As Integer
Dim patientNameFontSize As Integer
Dim particularsFontSize As Integer 'added by Mike, 20190323
Dim defaultFontName As String 'added by Mike, 20190314
Dim totalAmountReleasedValue As String 'added by Mike, 20190316
'Dim amountPaidInBytePerCharacter() As Byte 'added by Mike, 20190511
Dim amountPaidValue As Double 'added by Mike, 20190511
Dim placeValue As Integer 'added by Mike, 20190512
Dim outputPath As String 'added by Mike, 20190513

RowCount = 1
TableHeaderRow = 5 'output
LastPrintableRow = 16 'including the TOTAL PF
MaxPatientNameValueLength = 18 'characters in Pixels 'added by Mike, 20190323
MaxPatientNameColumnWidthPixels = 216 '12pt font * 18 characters in Pixels
patientNameFontSize = 12
MaxParticularsValueLength = 8 'characters in Pixels 'added by Mike, 20190323
MaxParticularsColumnWidthPixels = 96 '12pt font * 8 characters in Pixels 'added by Mike, 20190323
particularsFontSize = 12 'added by Mike, 20190323
defaultFontName = "Arial" 'added by Mike, 20190314
totalAmountReleasedValue = 0 'added by Mike, 20190316

Set myTemplate = Sheets("OR Template")
Set myInput = Sheets(ActiveSheet.name)

'added by Mike, 20190314
Application.ScreenUpdating = False

'added by Mike, 20190513
Application.DisplayAlerts = False
Set fso = CreateObject("scripting.filesystemobject")

'myTemplate.Copy ActiveWorkbook.Sheets(Sheets.Count)
'Set myOutput = Sheets(ActiveSheet.Name)
'myOutput.Name = Replace(myOutput.Name, "Template (2)", "") & myInput.Name

outputPath = Application.ThisWorkbook.Path & "\"
newWorkbookFileName = outputPath & "OR Workbook " & myInput.name & ".xlsx"

'added by Mike, 20190513
If Dir(newWorkbookFileName) <> "" Then
    'close workbook if it's open
    Set PreviousWorkbook = Workbooks.Open(newWorkbookFileName)
    PreviousWorkbook.Close
    
    fso.DeleteFile newWorkbookFileName
End If

'added by Mike, 20190509
Set NewWorkbook = Workbooks.Add
    With NewWorkbook
        .SaveAs Filename:=newWorkbookFileName
    End With
        
'added by Mike, 20190509
'---------------------------------------------------------
'Auto-make worksheet based on OR template component part
'---------------------------------------------------------
RowCount = TableHeaderRow + 2 'input
OutputRowCountOffset = -1
For Each row In myInput.Rows
        myTemplate.Copy NewWorkbook.Sheets(Sheets.Count)
        Set myOutput = Sheets(ActiveSheet.name)
        
        'added by Mike, 20190510
        'This resolves the issue with the image/picture logo not being in the correct scale.
        'This is when the template worksheet is copied to the new workbook.
        For Each p In ActiveSheet.Shapes
            'MsgBox ("There's a picture with the name: " & p.Name)
            p.ScaleHeight 1, msoScaleFromTopLeft
            p.ScaleWidth 0.96, msoScaleFromTopLeft
        Next p
        
        'added by Mike, 20190510; edited by Mike, 20190511
        'Write the value of the patient name from the input worksheet to the transaction's corresponding output worksheet
        myOutput.Range("C" & 9).Value = myInput.Range("C" & RowCount)
        
        'added by Mike, 20190510
        'Copy and paste the value of the Cashier person name from the input worksheet to the transaction's corresponding output worksheet
        myInput.Range("A" & 4).Columns.Copy
        myOutput.Range("I" & 47).PasteSpecial
        
        'added by Mike, 20190510; edited by Mike, 20190511
        'Write the current/present date from the input worksheet to the transaction's corresponding output worksheet
        myOutput.Range("J" & 7).Value = myInput.Range("A" & 3).Value
        'added by Mike, 20190522
        myOutput.Range("J" & 7).Value = UCase(myOutput.Range("J" & 7).Text)
        
        'added by Mike, 20190511; edited by Mike, 20190522
        'Copy and paste the "OSCA/PWD/Other ID No.:" value from the input worksheet to the transaction's corresponding output worksheet
        'myOutput.Range("M" & 11).Value = myInput.Range("K" & RowCount).Value
'        myInput.Range("K" & RowCount).Columns.Copy
'        myOutput.Range("M" & 11).PasteSpecial
        
        'added by Mike, 20190522
        MaxColumnWidthInCharacters = 15
        oscaPWDOtherIDNoNameValue = Trim(myInput.Range("K" & RowCount).Value)
        oscaPWDOtherIDNoNameValueLength = Len(oscaPWDOtherIDNoNameValue)
        oscaPWDOtherIDNoNameValueArray = Split(oscaPWDOtherIDNoNameValue, " ")
        output = oscaPWDOtherIDNoNameValue

        'MsgBox ("oscaPWDOtherIDNoNameValueLength: " & oscaPWDOtherIDNoNameValueLength)

        If oscaPWDOtherIDNoNameValueLength > MaxColumnWidthInCharacters Then
            output = ""
            temp = ""
                                                    
            For Index = LBound(oscaPWDOtherIDNoNameValueArray) To UBound(oscaPWDOtherIDNoNameValueArray)
                Value = oscaPWDOtherIDNoNameValueArray(Index)
                temp = temp & " " & Value
                
'                MsgBox ("temp: " & temp)
'                MsgBox ("Len(temp): " & Len(temp))
                
                If Len(temp) > MaxColumnWidthInCharacters Then
                    output = output & vbLf & Value 'add new line
                    temp = Value
                Else
                    output = output & " " & Value
                End If
            Next
        End If
            
         myOutput.Range("M" & 11).Value = Trim(output)

        'added by Mike, 20190511; edited by Mike, 20190519
        'myOutput.Range("F" & 7).Value = Format(Now(), "yyyy-MM-ddTHH:mm:ss")
        myOutput.Range("G" & 4).Value = Format(Now(), "yyyy-MM-ddTHH:mm:ss")
        
        'added by Mike, 20190511
        'Copy and paste the AMOUNT PAID from the input worksheet to the transaction's corresponding output worksheet
        If InStr(myInput.Range("D" & RowCount).Value, "SC") Or InStr(myInput.Range("D" & RowCount).Value, "PWD") Then
            myOutput.Range("E" & 18).Value = myInput.Range("E" & RowCount).Value
            myOutput.Range("D" & 18).Value = Application.RoundDown(myOutput.Range("E" & 18).Value / 0.71428, 2)
            'myOutput.Range("D" & 18).NumberFormat = "0.00"
        Else
            myOutput.Range("D" & 18).Value = myInput.Range("E" & RowCount)
        End If
        
        'added by Mike, 20190520
        'Copy and paste the CASH PAID from the input worksheet to the transaction's corresponding output worksheet
        myOutput.Range("C" & 41).Value = myInput.Range("L" & RowCount).Value
                
        'added by Mike, 20190511; edited by Mike, 21090512
        '-----------------------------------------------------------------------------
        ' Value of the "SUM OF PESOS" field in Words
        '-----------------------------------------------------------------------------
        inputAmountPaidValue = myInput.Range("E" & RowCount).Value
        amountPaidValue = inputAmountPaidValue
        placeValue = 1000
        amountPaidInString = ""

        'MsgBox ("amountPaidValue: " & amountPaidValue)
        Do Until amountPaidValue <= 0
            'MsgBox ("hello: " & amountPaidValue)
            placeValue = placeValue / 10
            
            'MsgBox ("hello: " & getWordOfOneDigitNumberWithPlaceValue(CInt(Fix(amountPaidValue / placeValue)), placeValue))

            amountPaidInString = amountPaidInString & getWordOfOneDigitNumberWithPlaceValue(CInt(Fix(amountPaidValue / placeValue)), placeValue) & " "
            
            amountPaidValue = amountPaidValue Mod placeValue
            'MsgBox ("inside amountPaidValue: " & amountPaidValue)
        Loop
                
        amountPaidInString = amountPaidInString & "PESOS"
        amountPaidDecimalValues = Round(inputAmountPaidValue - CInt(Fix(inputAmountPaidValue)), 2)
        
        'MsgBox ("decimal? " & amountPaidDecimalValues)
        
        If amountPaidDecimalValues > 0 Then
            amountPaidDecimalValues = amountPaidDecimalValues * 100
            amountPaidInString = amountPaidInString & " & " & amountPaidDecimalValues & "/100"
        End If
        
        amountPaidInString = amountPaidInString & " ONLY"
        
        myOutput.Range("C" & 13).Value = amountPaidInString
        
        'amountPaidInBytePerCharacter = StrConv(myInput.Range("E" & RowCount).Value, vbFromUnicode)
        'amountPaidInString = ""
        'For Each currentCharacter In amountPaidInBytePerCharacter
            'MsgBox ("hello: " & Chr(currentCharacter))
        '    If Chr(currentCharacter)
        'Next currentCharacter
        '-----------------------------------------------------------------------------
        
        'We use the name of the patient as part of the worksheet name
        myOutput.name = "OR PT " & myInput.Range("C" & RowCount).Value
      
        RowCount = RowCount + 1
                            
        If IsEmpty(myInput.Range("C" & RowCount).Value) Then
            Exit For
        End If
Next row

'added by Mike, 20190513
'Delete the default worksheet when the Macro automatically makes the new workbook
Worksheets("Sheet1").Delete

'added by Mike, 20190513
Application.DisplayAlerts = True

'added by Mike, 20190314
Application.ScreenUpdating = True

End Sub
Private Function getWordOfOneDigitNumberWithPlaceValue(number As Integer, placeValue As Integer) As String
' Copyright 2019 Usbong Social Systems, Inc.
'
' Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You ' may obtain a copy of the License at
'
' http://www.apache.org/licenses/LICENSE-2.0
'
' Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, ' WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing ' permissions and limitations under the License.
'
' @author: Michael Syson
' @date created: 20190512
' @date updated: 20190512
'
' Input:
' 1) 1 digit number character
' Example: 5
' 2) place value of number character
' Example: 100, i.e. hundreds place
'
'Output:
' 1) The equivalent word of the 1 digit number character with the place value
' Example: "FIVE HUNDRED"
'

If (placeValue = 100) Then
    getWordOfOneDigitNumberWithPlaceValue = getWordOfOneDigitNumber(number) & " HUNDRED"
ElseIf (placeValue = 10) Then
    getWordOfOneDigitNumberWithPlaceValue = getWordOfOneDigitNumberTensPlace(number)
ElseIf (placeValue = 1) Then
    getWordOfOneDigitNumberWithPlaceValue = getWordOfOneDigitNumber(number)
End If

End Function

Private Function getWordOfOneDigitNumber(number As Integer) As String
' Copyright 2019 Usbong Social Systems, Inc.
'
' Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You ' may obtain a copy of the License at
'
' http://www.apache.org/licenses/LICENSE-2.0
'
' Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, ' WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing ' permissions and limitations under the License.
'
' @author: Michael Syson
' @date created: 20190511
' @date updated: 20190511
'
' Input:
' 1) 1 digit number character
' Example: 5
'
'Output:
' 1) The equivalent word of the 1 digit number character
' Example: "FIVE"
'

If (number = 1) Then
    getWordOfOneDigitNumber = "ONE"
ElseIf (number = 2) Then
    getWordOfOneDigitNumber = "TWO"
ElseIf (number = 3) Then
    getWordOfOneDigitNumber = "THREE"
ElseIf (number = 4) Then
    getWordOfOneDigitNumber = "FOUR"
ElseIf (number = 5) Then
    getWordOfOneDigitNumber = "FIVE"
ElseIf (number = 6) Then
    getWordOfOneDigitNumber = "SIX"
ElseIf (number = 7) Then
    getWordOfOneDigitNumber = "SEVEN"
ElseIf (number = 8) Then
    getWordOfOneDigitNumber = "EIGHT"
ElseIf (number = 9) Then
    getWordOfOneDigitNumber = "NINE"
End If

'MsgBox ("returnOutput: " & returnOutput)

End Function

Private Function getWordOfOneDigitNumberTensPlace(number As Integer) As String
' Copyright 2019 Usbong Social Systems, Inc.
'
' Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You ' may obtain a copy of the License at
'
' http://www.apache.org/licenses/LICENSE-2.0
'
' Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, ' WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing ' permissions and limitations under the License.
'
' @author: Michael Syson
' @date created: 20190512
' @date updated: 20190512
'
' Input:
' 1) 1 digit number character
' Example: 5
'
'Output:
' 1) The equivalent word of the 1 digit number character in Tens place
' Example: "FIFTY"
'

If (number = 1) Then
    getWordOfOneDigitNumberTensPlace = "TEN"
ElseIf (number = 2) Then
    getWordOfOneDigitNumberTensPlace = "TWENTY"
ElseIf (number = 3) Then
    getWordOfOneDigitNumberTensPlace = "THIRTY"
ElseIf (number = 4) Then
    getWordOfOneDigitNumberTensPlace = "FORTY"
ElseIf (number = 5) Then
    getWordOfOneDigitNumberTensPlace = "FIFTY"
ElseIf (number = 6) Then
    getWordOfOneDigitNumberTensPlace = "SIXTY"
ElseIf (number = 7) Then
    getWordOfOneDigitNumberTensPlace = "SEVENTY"
ElseIf (number = 8) Then
    getWordOfOneDigitNumberTensPlace = "EIGHTY"
ElseIf (number = 9) Then
    getWordOfOneDigitNumberTensPlace = "NINETY"
End If

End Function